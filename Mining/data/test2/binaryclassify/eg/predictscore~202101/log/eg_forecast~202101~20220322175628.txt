20220322-17:56:35  加载训练结果：./binaryclassify/eg/traintest~202011~202012/train_result~202011~202012.pkl
20220322-17:56:36  从训练结果中获取Info,并加入预测所需信息


                   ###################################################################### 加工预测账期近n月基础数据
                    
20220322-17:56:40  开始时间：2022-03-22 17:56:40
20220322-17:56:40  month: 202101
20220322-17:56:40  参数设置：
                       step: predict
                       Info.model_name: 模型示例
                       Info.n_recent: 3
                       drop_midtable: True
                       cover_table_all: True

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220322-17:56:40  检查 ml.ml_feature_info_yw_user_m
20220322-17:56:40      72 列
20220322-17:56:40      202101账期： 18000行
20220322-17:56:40      202012账期： 15000行
20220322-17:56:40      202011账期： 10000行


20220322-17:56:40  检查 ml.ml_feature_add_yw_user_m
20220322-17:56:40      4 列
20220322-17:56:40      202101账期： 18000行
20220322-17:56:40      202012账期： 15000行
20220322-17:56:40      202011账期： 10000行


20220322-17:56:40  未设置Info.table_day



20220322-17:56:40  预测集无需Info.table_y




                   -------------------- 汇总当期特征与目标：ml.dm_zc_moxing_info_add_202101 -------------------------- 
20220322-17:56:40  查询表： 
                       select concat(table_schema, '.', table_name) full_name
                       from information_schema.tables 
                       where table_schema = 'ml' and table_name='dm_zc_moxing_info_add_202101'
                       表不存在 
20220322-17:56:41  ml.dm_zc_moxing_info_add_202101不存在，将新建
20220322-17:56:41  建表语句： 
                       drop table if exists ml.dm_zc_moxing_info_add_202101;
                       select pg_sleep(10);
                       create table ml.dm_zc_moxing_info_add_202101 as
                       select * from (
                           select a.* 
                           , a2.age_add, a2.sex_add
                           
                           from (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202101') a 
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202101') a2 on a.user_id = a2.user_id
                           
                       ) t where 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3
20220322-17:56:51      sql执行完毕
20220322-17:56:51  统计 ml.dm_zc_moxing_info_add_202101 的行列数
20220322-17:56:51      15300行，74列
20220322-17:56:51          dis_predict_total {'count': 15300}

                   ------------------------- 打分集-当月账期数据：ml.mid_eg_now_predict_202101 ---------------------------- 
20220322-17:56:51  建表语句（202101账期当月数据） 
                       drop table if exists ml.mid_eg_now_predict_202101;
                       select pg_sleep(10);
                       create table ml.mid_eg_now_predict_202101 as 
                       select *  from ml.dm_zc_moxing_info_add_202101
                       where user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3
20220322-17:57:02      sql执行完毕
20220322-17:57:02  数据量： select  count(1) from ml.mid_eg_now_predict_202101
20220322-17:57:02      dis_predict_model {'count': 15048}


                   ------------------------ 合并近n月数据：ml.mid_eg_recent_predict_202101  -------------------------------- 
20220322-17:57:02  建表语句： 
                       drop table if exists ml.mid_eg_recent_predict_202101;
                       select pg_sleep(10);
                       create table ml.mid_eg_recent_predict_202101 as 
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, user_status, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, * from ml.mid_eg_now_predict_202101
                       ) t0
                       union all 
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, user_status, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, 
                           b.* 
                           , a2.age_add, a2.sex_add 
                           from ml.mid_eg_now_predict_202101 a
                           inner join (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202012') b on a.user_id = b.user_id
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202012') a2 on a.user_id = a2.user_id
                       ) t1
                       union all
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, user_status, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, 
                           b.* 
                           , a2.age_add, a2.sex_add 
                           from ml.mid_eg_now_predict_202101 a
                           inner join (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202011') b on a.user_id = b.user_id
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202011') a2 on a.user_id = a2.user_id
                       ) t2
20220322-17:57:12      sql执行完毕
20220322-17:57:12  统计ml.mid_eg_recent_predict_202101行列数
20220322-17:57:12      8178行，37列

                   --------------------------------- 核验各账期数据量  -------------------------------------------------- 
20220322-17:57:12  sql语句： 
                       select user_acct_month, data_use, acct_month, count(1) 
                       from ml.mid_eg_recent_predict_202101 
                       group by user_acct_month, data_use, acct_month 
                       order by user_acct_month, data_use, acct_month

20220322-17:57:13  结果：
                     user_acct_month      data_use  acct_month  count
                   0          202101  data_predict      202011   8178
                   1          202101  data_predict      202012  12449
                   2          202101  data_predict      202101  15048


C:\Users\higher\Desktop\to伟鹏的代码_v2\ModelProject\selfmodule\tablemodule\tablefun.py:910: UserWarning: 下列账期用户量不同，请检查！
                              acct_month  count
user_acct_month data_use                       
202101          data_predict      202011   8178
                data_predict      202012  12449
                data_predict      202101  15048
  warnings.warn(w)

                   -------------------------------- 删除中间表 ----------------------------------------------------- 
20220322-17:57:13  sql语句： drop table if exists ml.mid_eg_model_predict_202101
20220322-17:57:13      sql执行完毕
20220322-17:57:13  sql语句： drop table if exists ml.mid_eg_now_predict_202101
20220322-17:57:13      sql执行完毕

20220322-17:57:13  返回结果表名：ml.mid_eg_recent_predict_202101
20220322-17:57:13  将Info保存至./binaryclassify/eg/traintest~202011~202012/Info~base_predict.pkl

20220322-17:57:13  结束时间：2022-03-22 17:57:13
20220322-17:57:13  耗时：33 s


20220322-17:57:29  将数据拆分成 4 份分别预测

20220322-17:57:29  =========================================== 0份：[0, 1, 2] ==========================================
20220322-17:57:29  =========================================== 1份：[3, 4, 5] ==========================================
20220322-17:57:29  =========================================== 2份：[6, 7] ==========================================
20220322-17:57:29  =========================================== 3份：[8, 9] ==========================================
20220322-17:57:38  修改Info，用于分批预测
20220322-17:57:38  condition: right(user_id::text, 1) in ('8', '9')
                   table_predict:./binaryclassify/eg//predictscore~202101/predict_data~202101~3.csv
                   table_score:./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~3.csv