20220305-00:36:04  加载训练结果：./binaryclassify/eg/traintest~202011~202012/train_result~202011~202012.pkl
20220305-00:36:05  从训练结果中获取Info,并加入预测所需信息

20220305-00:36:05  condition中涉及日数据，接下来的预测过程不得不暂时忽略日数据条件
20220305-00:36:05  务必通知清单输出人员在输出清单时补充这些条件
20220305-00:36:05  确认忽略日数据条件，不会造成数据量的异常突增
20220305-00:36:05  检查剔除前后的逻辑确保可通过在清单输出时补充日数据条件以得到预期用户范围的清单

20220305-00:36:05  --- table_day从ml.ml_feature_info_yw_user_day,  acct_day, 1, 15修改为np.nan
20220305-00:36:05  --- 剔除condition_base中的日数据条件
                   原始：
                   
                       phone_no_null is null and
                       dayvalue_phone_no_null is null and
                       last_stop_date is not null and
                       innet_months >= 3
                   剔除后：
                   phone_no_null is null and
                    last_stop_date is not null and
                    innet_months >= 3

20220305-00:36:05  --- 剔除condition中的日数据条件
                   原始：
                   dayvalue_user_status='在网-正常' and 
                       phone_no_null is null and
                       dayvalue_phone_no_null is null and
                       last_stop_date is not null and
                       innet_months >= 3
                   剔除后：
                   phone_no_null is null and
                    last_stop_date is not null and
                    innet_months >= 3


                   ###################################################################### 加工预测账期近n月基础数据
                    
20220305-00:36:05  开始时间：2022-03-05 00:36:05
20220305-00:36:05  month: 202101
20220305-00:36:05  参数设置：
                       step: predict
                       Info.model_name: 模型示例
                       Info.n_recent: 3
                       drop_midtable: True
                       cover_table_all: True

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220305-00:36:05  检查 ml.ml_feature_info_yw_user_m
20220305-00:36:05      72 列
20220305-00:36:05      202101账期： 18000行
20220305-00:36:05      202012账期： 15000行
20220305-00:36:05      202011账期： 10000行


20220305-00:36:05  检查 ml.ml_feature_add_yw_user_m
20220305-00:36:05      4 列
20220305-00:36:05      202101账期： 18000行
20220305-00:36:05      202012账期： 15000行
20220305-00:36:05      202011账期： 10000行


20220305-00:36:05  未设置Info.table_day



20220305-00:36:05  预测集无需Info.table_y




                   -------------------- 汇总当期特征与目标：ml.dm_zc_moxing_info_add_202101 -------------------------- 
20220305-00:36:05  查询表： 
                       select concat(table_schema, '.', table_name) full_name
                       from information_schema.tables 
                       where table_schema = 'ml' and table_name='dm_zc_moxing_info_add_202101'
                       存在1个表 
20220305-00:36:05  ml.dm_zc_moxing_info_add_202101已存在，将重建覆盖
20220305-00:36:05  建表语句： 
                       drop table if exists ml.dm_zc_moxing_info_add_202101;
                       select pg_sleep(10);
                       create table ml.dm_zc_moxing_info_add_202101 as
                       select * from (
                           select a.* 
                           , a2.age_add, a2.sex_add
                           
                           from (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202101') a 
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202101') a2 on a.user_id = a2.user_id
                           
                       ) t where phone_no_null is null and
                        last_stop_date is not null and
                        innet_months >= 3
20220305-00:36:15      sql执行完毕
20220305-00:36:15  统计 ml.dm_zc_moxing_info_add_202101 的行列数
20220305-00:36:15      15300行，74列
20220305-00:36:15          dis_predict_total {'count': 15300}

                   ------------------------- 打分集-当月账期数据：ml.mid_eg_now_predict_202101 ---------------------------- 
20220305-00:36:15  建表语句（202101账期当月数据） 
                       drop table if exists ml.mid_eg_now_predict_202101;
                       select pg_sleep(10);
                       create table ml.mid_eg_now_predict_202101 as 
                       select *  from ml.dm_zc_moxing_info_add_202101
                       where phone_no_null is null and
                        last_stop_date is not null and
                        innet_months >= 3
20220305-00:36:25      sql执行完毕
20220305-00:36:25  数据量： select  count(1) from ml.mid_eg_now_predict_202101
20220305-00:36:26      dis_predict_model {'count': 15300}


                   ------------------------ 合并近n月数据：ml.mid_eg_recent_predict_202101  -------------------------------- 
20220305-00:36:26  建表语句： 
                       drop table if exists ml.mid_eg_recent_predict_202101;
                       select pg_sleep(10);
                       create table ml.mid_eg_recent_predict_202101 as 
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, * from ml.mid_eg_now_predict_202101
                       ) t0
                       union all 
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, 
                           b.* 
                           , a2.age_add, a2.sex_add 
                           from ml.mid_eg_now_predict_202101 a
                           inner join (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202012') b on a.user_id = b.user_id
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202012') a2 on a.user_id = a2.user_id
                       ) t1
                       union all
                       select user_acct_month, data_use, acct_month, user_id, phone_no_null, account_id, innet_months, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_5g, gprs_flow_busy, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game
                       from (
                           select cast(202101 as text) user_acct_month, cast('data_predict'  as text) data_use, 
                           b.* 
                           , a2.age_add, a2.sex_add 
                           from ml.mid_eg_now_predict_202101 a
                           inner join (select * from ml.ml_feature_info_yw_user_m where cast(acct_month as text)='202011') b on a.user_id = b.user_id
                           left join (select*from ml.ml_feature_add_yw_user_m where cast(acct_month as text)='202011') a2 on a.user_id = a2.user_id
                       ) t2
20220305-00:36:36      sql执行完毕
20220305-00:36:36  统计ml.mid_eg_recent_predict_202101行列数
20220305-00:36:36      8302行，37列

                   --------------------------------- 核验各账期数据量  -------------------------------------------------- 
20220305-00:36:36  sql语句： 
                       select user_acct_month, data_use, acct_month, count(1) 
                       from ml.mid_eg_recent_predict_202101 
                       group by user_acct_month, data_use, acct_month 
                       order by user_acct_month, data_use, acct_month

20220305-00:36:36  结果：
                     user_acct_month      data_use  acct_month  count
                   0          202101  data_predict      202011   8302
                   1          202101  data_predict      202012  12655
                   2          202101  data_predict      202101  15300


D:\STUDY\Python\PycharmProjects\ModelProject\selfmodule\tablemodule\tablefun.py:910: UserWarning: 下列账期用户量不同，请检查！
                              acct_month  count
user_acct_month data_use                       
202101          data_predict      202011   8302
                data_predict      202012  12655
                data_predict      202101  15300
  warnings.warn(w)

                   -------------------------------- 删除中间表 ----------------------------------------------------- 
20220305-00:36:36  sql语句： drop table if exists ml.mid_eg_model_predict_202101
20220305-00:36:36      sql执行完毕
20220305-00:36:36  sql语句： drop table if exists ml.mid_eg_now_predict_202101
20220305-00:36:36      sql执行完毕

20220305-00:36:36  返回结果表名：ml.mid_eg_recent_predict_202101
20220305-00:36:36  将Info保存至./binaryclassify/eg/traintest~202011~202012/Info~base_predict.pkl

20220305-00:36:36  结束时间：2022-03-05 00:36:36
20220305-00:36:36  耗时：31 s


20220305-00:36:36  将数据拆分成 3 份分别预测

20220305-00:36:36  =========================================== 0份：[0, 1, 2, 3] ==========================================
20220305-00:36:36  修改Info，用于分批预测
20220305-00:36:36  condition: right(user_id::text, 1) in ('0', '1', '2', '3')
                   table_predict:./binaryclassify/eg//predictscore~202101/predict_data~202101~0.csv
                   table_score:./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~0.csv

                   ###################################################################### 预测集加工
                    
20220305-00:36:36  开始时间：2022-03-05 00:36:36
20220305-00:36:36  参数设置：
                       Info.auto_pair2: False
                       table_in: ml.mid_eg_recent_predict_202101
                       Info.iv_limit: 0.05
                       Info.r_limit: 0.95
                       step: predict
                       Info.model_name: 模型示例
                       stage: create

20220305-00:36:36  ------------------------- 读取数据: ml.mid_eg_recent_predict_202101 2022-03-05 00:36:36 -------------------------
20220305-00:36:36      src: gp
20220305-00:36:36      condition: right(user_id::text, 1) in ('0', '1', '2', '3')
20220305-00:36:36      col_need(36): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'innet_months', 'last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'if_nolimit', 'if_5g_dinner', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:36:36      col_del: None
20220305-00:36:36      col_char(7): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'if_nolimit', 'if_5g_dinner']
20220305-00:36:36      col_num(28): ['innet_months', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:36:36      col_date(1): ['last_stop_date']
20220305-00:36:36      nrows: None
20220305-00:36:36      if_coltolower: True
20220305-00:36:36      kwargs: {}

20220305-00:36:36      读取
20220305-00:36:37      shape: (14870, 36)

20220305-00:36:37  -------------------------读取完毕: (14870, 36) 2022-03-05 00:36:37 -------------------------

20220305-00:36:37  手动衍生_py7个字段: {'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好'}
20220305-00:36:37  monthsremain_last_stop_date: last_stop_date - current_date
20220305-00:36:37  days_call_p: days_call / days_month
20220305-00:36:37  days_call_p_1: days_call_p + days_gprs
20220305-00:36:37  days_call_p_2: days_call_p_1 + days_gprs
20220305-00:36:37  days_call_p_3: days_call_p_2 + days_gprs
20220305-00:36:37  days_call_p_4: days_call_p_3 + days_gprs
20220305-00:36:37  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220305-00:36:39  数据量: (14870, 43)

20220305-00:36:39  检查数据
20220305-00:36:39  各账期数据量分布：
                       202011  data_predict    3384
                       202012  data_predict    5186
                       202101  data_predict    6300
                       dtype: int64
20220305-00:36:39  各账期数据量不一致
20220305-00:36:39  以nan填充缺少账期的记录
20220305-00:36:39      修改后：
                       202011  data_predict    6300
                       202012  data_predict    6300
                       202101  data_predict    6300
                       dtype: int64)
20220305-00:36:39  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！


20220305-00:36:39  填充数值型&类别型字段缺失值
20220305-00:36:39  日期型字段缺失值情况：
                       last_stop_date    4030
                       dtype: int64

                   ----------------------------------------- 当月 类别型 onthot 
20220305-00:36:39  ['if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video']

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220305-00:36:39  (6300, 34)
20220305-00:36:39  筛选衍生字段的 原始/手动衍生_sql 字段

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220305-00:36:39  字段个数：24, 添加字段：None
20220305-00:36:39  (6300, 58)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220305-00:36:39  字段个数：6, 添加字段：None
20220305-00:36:39  (6300, 64)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220305-00:36:39  字段个数：12, 添加字段：None
20220305-00:36:40  (6300, 76)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220305-00:36:40  字段个数：9, 添加字段：None
20220305-00:36:40  (6300, 85)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220305-00:36:40  字段个数：17, 添加字段：None
20220305-00:36:40  (6300, 102)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220305-00:36:40  字段个数：18, 添加字段：None
20220305-00:36:40  (6300, 120)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220305-00:36:40  字段个数：15, 添加字段：None
20220305-00:36:40  (6300, 135)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220305-00:36:40  ('more0cnt', '近3月大于0的月份数')
20220305-00:36:40  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220305-00:36:40  (6300, 151)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220305-00:36:40  字段个数：1, 添加字段：None
20220305-00:36:40  (6300, 152)

                   ----------------------------------------- 汇总最终宽表 
20220305-00:36:40  table.shape:(6300, 152)

20220305-00:36:40  保存宽表结果至：./binaryclassify/eg//predictscore~202101/predict_data~202101~0.csv

20220305-00:36:40  计算字段之间的相关性系数
20220305-00:36:41  
                       count    10153.0
                       mean    0.181
                       std    0.196
                       min    0.0
                       25%    0.051
                       50%    0.11
                       75%    0.239
                       max    1.0
                       dtype: float64


                   ------------------------------- 计算宽表字段psi ------------------------------------ 
                    
                    20220305-00:36:41  my toolmodule.dataprep.PsiTransformer_DF transform
                    20220305-00:36:41      开始时间：2022-03-05 00:36:41
                    20220305-00:36:41      data in : (6300, 163)
                    20220305-00:36:41      self已带有id_X属性 2461051380616
                    20220305-00:36:41      首次从X获取id_X_new属性 2278989014664
                    20220305-00:36:41      data in2: (6300, 157)
                    20220305-00:36:41      对154个数值字段进行分箱：['innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_last_defer', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__days_call_p', 'grow__calling_cnt', 'grow__gprs_flow_5g', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_now_rest', 'grow__gprs_resource', 'grow__nos_calling', 'grow__gprs_flow_commu', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'grow__gprs_flow_busy', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__gprs_flow_5g', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_flow_game', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
                    20220305-00:36:41      timedata_predict 计算稳定度（不区分正负例）：self.col_psi_all_
                    20220305-00:36:44      data out: (6300, 157)
                    20220305-00:36:44      transform轨迹：PsiTransformer_DF(Ncase='0', Pcase='1', bins=None, col_ignore=None, fit_pop_all=True, precision=6, , psi_limit=0.1, trans_na_error=True, warn_mark=' PsiTransformer')
                    20220305-00:36:44      结束时间：2022-03-05 00:36:44 耗时(2s)
20220305-00:36:44  保存Psi至：./binaryclassify/eg//predictscore~202101/predict_Psi~202011~202101~0.pkl
20220305-00:36:44  保存dis_exam至：./binaryclassify/eg//predictscore~202101/predict_dis_exam~202101~0.pkl
20220305-00:36:44  结束时间：2022-03-05 00:36:44
20220305-00:36:44  耗时：7 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: stage取值为create时,r_limit, iv_limit参数无效，将被忽略
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例) ['account_id']字段多出3480个取值, .head(5):
                      old  new
field      value              
account_id 101572366  NaN  1.0
           101919658  NaN  1.0
           101979042  NaN  1.0
           101980220  NaN  1.0
           101994315  NaN  1.0
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例)，41个字段稳定性>=psi_limit（0.1）：
grow__arpu                      1.839474
wave__gprs_resource             0.795875
min__gprs_now_rest              0.749938
grow__gprs_resource             0.704504
grow__gprs_last_defer           0.610933
more0cnt__calling_dura          0.474227
moreq25cnt__arpu                0.469977
moreq25cnt__calling_dura        0.420718
more0cnt__nos_calling           0.415210
moreq25cnt__calling_cnt         0.368658
wave__gprs_now_defer            0.349981
moreq25cnt__nos_calling         0.308958
moreq25cnt__calling_diff_cnt    0.306292
wave__calling_dura              0.291553
moreq25cnt__nos_calling_diff    0.260338
min__gprs_last_defer            0.257943
moreq25cnt__gprs_last_defer     0.256238
sep__gprs_now_rest              0.247699
min__arpu                       0.242649
wave__gprs_now_rest             0.240267
wave__nos_calling               0.236278
sep__nos_calling                0.228220
min__nos_calling                0.222131
min__nos_calling_diff           0.195704
sep__nos_calling_diff           0.194400
wave__calling_cnt               0.192318
avg__days_call_p                0.192247
wave__call_use                  0.186655
min__calling_dura               0.185609
wave__calling_diff_cnt          0.184157
min__gprs_flow_busy             0.169963
min__calling_diff_dura          0.161388
min__calling_cnt                0.148337
min__call_use                   0.137599
min__calling_diff_cnt           0.130728
min__gprs_resource              0.117589
avg__days_call_p_4              0.114904
moreq25cnt__gprs_flow_commu     0.109979
moreq25cnt__gprs_flow_busy      0.108603
min__days_call_p_4              0.103584
sep__gprs_flow_commu            0.102287
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)

                   ###################################################################### 预测打分过程
                    
20220305-00:36:44  开始时间：2022-03-05 00:36:44
20220305-00:36:44  模型名称：模型示例
20220305-00:36:44  预测账期：202101
20220305-00:36:44  提取模型结果: ratio_1_2 | pipeline2 | RandomForestClassifier_DF - 默认参数
20220305-00:36:44  模型 [宽带探索]~训练~测试 账期：~202011~202012
20220305-00:36:44  最优模型的流水线不是pipeline1，为进行“top原因匹配”， 加载train_model_flows，从中获取pipeline1
20220305-00:36:44      加载模型集合：./binaryclassify/eg/traintest~202011~202012/train_model_flows~202011~202012.pkl
20220305-00:36:44      从train_model_flows中获取pipeline1
20220305-00:36:44  建模时效果评估数据集：data_timeout

20220305-00:36:44  ------------------------- 读取数据: ./binaryclassify/eg//predictscore~202101/predict_data~202101~0.csv 2022-03-05 00:36:44 -------------------------
20220305-00:36:44      src: file
20220305-00:36:44      condition: None
20220305-00:36:44      col_need(150): ['acct_month', 'user_id', 'sms_cnt', 'call_fee_local', 'account_id', 'innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'greatest_gprs_app', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__calling_cnt', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_resource', 'grow__nos_calling', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
20220305-00:36:44      col_del: None
20220305-00:36:44      col_char: None
20220305-00:36:44      col_num: None
20220305-00:36:44      col_date: None
20220305-00:36:44      nrows: None
20220305-00:36:44      if_coltolower: False
20220305-00:36:44      kwargs: {}

20220305-00:36:44      读取
20220305-00:36:44  -------------------------读取完毕: (6300, 150) 2022-03-05 00:36:44 -------------------------

20220305-00:36:44  补齐流水线删除的12个fit_in_colnames_字段
20220305-00:36:44      数据量：(6300, 162)

20220305-00:36:44  数据账期校验:
20220305-00:36:44      通过

20220305-00:36:44  最优模型 - pipeline2 - 数据转换
20220305-00:36:44      从流水线中获取WoeTransformer_DF
20220305-00:36:44      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）
20220305-00:36:49      转换前shape：(6300, 162)
20220305-00:36:49      转换后shape：(6300, 144)

20220305-00:36:49  top原因匹配
20220305-00:36:49      pipeline1 - 数据转换
20220305-00:36:49      col_notcause：['acct_month', 'phone_no_null', 'user_id', 'account_id', 'last_stop_date']
20220305-00:36:49      从流水线中获取WoeTransformer_DF
20220305-00:36:49      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）

20220305-00:36:49      数据分箱（union1） 2022-03-05 00:36:49
20220305-00:36:52      转换前shape：(6300, 162)
20220305-00:36:52      转换后shape：(6300, 151)

20220305-00:36:52      woe转换 2022-03-05 00:36:52
20220305-00:36:54      转换前shape：(6300, 151)
20220305-00:36:54      转换后shape：(6300, 139)

20220305-00:36:54      确定动因字段 2022-03-05 00:36:54
20220305-00:36:54      剔除非动因字段（0个）：set()
20220305-00:36:54      动因字段：139个

20220305-00:36:54      计算动因字段的相关矩阵，删除高相关字段
20220305-00:36:54      输入为相关性系数矩阵
20220305-00:36:54      提取相关性超过0.8的字段
20220305-00:36:55      需要删除62个高度相关字段: ['grow__gprs_last_defer', 'max__calling_cnt', 'grow__gprs_flow_commu', 'max__gprs_flow_commu', 'std__gprs_flow_busy', 'avg__days_call_p_4', 'max__gprs_flow_busy', 'std__gprs_flow_roam', 'avg__gprs_resource', 'wave__gprs_flow_music', 'max__arpu', 'moreq25cnt__calling_dura', 'max__calling_diff_cnt', 'min__gprs_resource', 'avg__gprs_flow_short', 'avg__call_use', 'moreq25cnt__calling_diff_cnt', 'avg__nos_call', 'min__gprs_flow_video', 'avg__gprs_now_rest', 'avg__nos_calling_diff', 'more0cnt__calling_dura', 'min__call_use', 'avg__gprs_last_defer', 'max__nos_calling', 'max__gprs_last_defer', 'min__calling_cnt', 'moreq25cnt__gprs_flow_video', 'std__gprs_flow_commu', 'wave__gprs_flow_commu', 'avg__calling_dura', 'avg__call_dura_roam', 'max__gprs_flow_video', 'min__calling_dura', 'grow__calling_cnt', 'nos_calling', 'moreq25cnt__gprs_last_defer', 'min__gprs_last_defer', 'grow__gprs_flow_short', 'calling_cnt', 'nos_calling_diff', 'max__gprs_now_rest', 'moreq25cnt__gprs_flow_commu', 'max__calling_dura', 'min__gprs_flow_busy', 'wave__gprs_resource', 'calling_diff_dura', 'wave__gprs_flow_short', 'arpu', 'gprs_flow_commu', 'moreq25cnt__calling_cnt', 'sep__gprs_now_rest', 'sep__gprs_flow_commu', 'sep__gprs_flow_5g', 'moreq25cnt__nos_calling', 'gprs_flow_music', 'min__calling_diff_dura', 'avg__calling_diff_dura', 'std__gprs_flow_short', 'min__nos_calling', 'min__gprs_flow_music', 'gprs_flow_busy']
20220305-00:36:55      动因字段：77个

20220305-00:36:55      从原因中删除用户量过小的 字段-取值
20220305-00:36:55      阈值 valuecount_limit= 50
20220305-00:36:55      将1个字段的1个取值（用户量<=50）从原因中剔除（对应的woe置为-999）

20220305-00:36:55      原因排序 2022-03-05 00:36:55
20220305-00:36:55      top1 2022-03-05 00:36:55
20220305-00:36:55      top2 2022-03-05 00:36:55
20220305-00:36:55      top3 2022-03-05 00:36:55
20220305-00:36:56      排序结束 2022-03-05 00:36:56

20220305-00:36:56      将woe<=woe_thred（0)的原因置空
20220305-00:36:56      top1: colwoe_top1字段最小值0.27 > woe_thred（0）,无需处理
20220305-00:36:56      top2: 将72行woe<=woe_thred（0)的colname_top2, colcomment_top2, colvalue_top2, colwoe_top2置空
20220305-00:36:56      top3: 将214行woe<=woe_thred（0)的colname_top3, colcomment_top3, colvalue_top3, colwoe_top3置空


20220305-00:36:56  模型预测

20220305-00:36:56  匹配各分数档位查准率、提升度（非累计）

20220305-00:36:56  概率得分描述统计：
                                 score
                       count  6300.000
                       mean     37.754
                       std      16.454
                       min       1.000
                       25%      25.000
                       50%      38.000
                       75%      49.000
                       max      93.000

20220305-00:36:56  概率得分分段统计：
                                       用户量      占比
                       (-0.001, 10.0]     201  0.031905
                       (10.0, 20.0]       886  0.140635
                       (20.0, 30.0]      1125  0.178571
                       (30.0, 40.0]      1320  0.209524
                       (40.0, 50.0]      1395  0.221429
                       (50.0, 60.0]       903  0.143333
                       (60.0, 70.0]       271  0.043016
                       (70.0, 80.0]       114  0.018095
                       (80.0, 90.0]        74  0.011746
                       (90.0, 100.0]       11  0.001746

20220305-00:36:56  模型稳定度：0.12876

                   结果数据展示：
                          acct_month      user_id model_name  month_train  month_test  score  score_cut  precision lift  sms_cnt  call_fee_local        colname_top1                colcomment_top1  \
                       0      202101  14877955782   模型示例       202011      202012   12.0         11       0.01  0.1      0.0             0.0       gprs_now_rest               当月gprs资源余量   
                       5      202101  24028982792   模型示例       202011      202012   10.0         11       0.01  0.1      0.0             0.0  std__gprs_resource  gprs国内资源总量：近3月标准差   
                   
                                 colvalue_top1  colwoe_top1      colname_top2                          colcomment_top2 colvalue_top2  colwoe_top2      colname_top3  \
                       0           (-inf, 1.5]     0.269824  moreq25cnt__arpu  当月arpu：近3月大于第一四分位数的月份数    (2.5, inf]     0.195902               NaN   
                       5  (127993.355469, inf]     0.632888     gprs_now_rest                         当月gprs资源余量   (-inf, 1.5]     0.269824  moreq25cnt__arpu   
                   
                                                  colcomment_top3 colvalue_top3  colwoe_top3  
                       0                                      NaN           NaN          NaN  
                       5  当月arpu：近3月大于第一四分位数的月份数    (2.5, inf]     0.195902  

20220305-00:36:56  保存结果数据至：./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~0.csv
20220305-00:36:56  保存数据处理流水线至：./binaryclassify/eg//predictscore~202101/predict_result~202011~202012~202101~0.pkl

20220305-00:36:56  结束时间：2022-03-05 00:36:56
20220305-00:36:56  耗时：12 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     FeatureUnion 下列字段重复，仅保留前一列 153列 => 151列：['greatest_gprs_app~video', 'greatest_gprs_app~commu']
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer timedata_predict 计算稳定性(不区分正负例)，33个字段稳定性>=psi_limit（0.1）：
grow__arpu                      1.845135
wave__gprs_resource             0.907010
grow__gprs_last_defer           0.747307
grow__gprs_resource             0.569646
more0cnt__calling_dura          0.450926
wave__gprs_now_rest             0.421634
more0cnt__nos_calling           0.394150
wave__gprs_now_defer            0.389244
sep__gprs_now_rest              0.386826
moreq25cnt__calling_dura        0.383692
moreq25cnt__calling_cnt         0.358902
moreq25cnt__arpu                0.354470
min__gprs_last_defer            0.349643
moreq25cnt__gprs_last_defer     0.348314
moreq25cnt__calling_diff_cnt    0.307752
moreq25cnt__nos_calling         0.305565
wave__calling_dura              0.280288
wave__nos_calling               0.250521
sep__nos_calling                0.236058
moreq25cnt__nos_calling_diff    0.235986
min__nos_calling                0.203845
wave__call_use                  0.189525
avg__days_call_p                0.180110
min__nos_calling_diff           0.179269
min__arpu                       0.175373
min__calling_dura               0.173284
sep__nos_calling_diff           0.160348
wave__calling_diff_cnt          0.141383
min__calling_diff_dura          0.136258
std__gprs_resource              0.134468
wave__calling_cnt               0.130180
min__gprs_flow_busy             0.119733
std__gprs_now_rest              0.100188
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer time2 计算稳定性(不区分正负例)，30个字段稳定性>=psi_limit（0.1）：
grow__arpu                      1.983413
grow__gprs_last_defer           0.740166
wave__gprs_resource             0.615575
grow__gprs_resource             0.569646
more0cnt__calling_dura          0.450926
wave__gprs_now_rest             0.428538
more0cnt__nos_calling           0.394150
wave__gprs_now_defer            0.387185
sep__gprs_now_rest              0.386826
moreq25cnt__calling_dura        0.383692
moreq25cnt__gprs_flow_busy      0.367537
moreq25cnt__calling_cnt         0.358902
moreq25cnt__arpu                0.354470
moreq25cnt__gprs_last_defer     0.348314
min__gprs_last_defer            0.344849
moreq25cnt__calling_diff_cnt    0.307752
wave__calling_dura              0.280288
wave__calling_cnt               0.262835
wave__nos_calling               0.250521
moreq25cnt__nos_calling_diff    0.235986
std__gprs_now_rest              0.211496
min__nos_calling                0.203845
min__call_use                   0.195002
min__calling_diff_cnt           0.194243
wave__call_use                  0.189884
min__calling_dura               0.167596
avg__days_call_p                0.155601
min__arpu                       0.146306
min__calling_diff_dura          0.113922
moreq25cnt__nos_calling         0.101104
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer  X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: 模型稳定度：0.12876

  mapped = lib.map_infer(values, f, convert=convert_dtype)
20220305-00:36:56  ==========================================================================================

20220305-00:36:56  =========================================== 1份：[4, 5, 6, 7] ==========================================
20220305-00:36:56  修改Info，用于分批预测
20220305-00:36:56  condition: right(user_id::text, 1) in ('4', '5', '6', '7')
                   table_predict:./binaryclassify/eg//predictscore~202101/predict_data~202101~1.csv
                   table_score:./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~1.csv

                   ###################################################################### 预测集加工
                    
20220305-00:36:56  开始时间：2022-03-05 00:36:56
20220305-00:36:56  参数设置：
                       Info.auto_pair2: False
                       table_in: ml.mid_eg_recent_predict_202101
                       Info.iv_limit: 0.05
                       Info.r_limit: 0.95
                       step: predict
                       Info.model_name: 模型示例
                       stage: create

20220305-00:36:56  ------------------------- 读取数据: ml.mid_eg_recent_predict_202101 2022-03-05 00:36:56 -------------------------
20220305-00:36:56      src: gp
20220305-00:36:56      condition: right(user_id::text, 1) in ('4', '5', '6', '7')
20220305-00:36:56      col_need(36): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'innet_months', 'last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'if_nolimit', 'if_5g_dinner', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:36:56      col_del: None
20220305-00:36:56      col_char(7): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'if_nolimit', 'if_5g_dinner']
20220305-00:36:56      col_num(28): ['innet_months', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:36:56      col_date(1): ['last_stop_date']
20220305-00:36:56      nrows: None
20220305-00:36:56      if_coltolower: True
20220305-00:36:56      kwargs: {}

20220305-00:36:56      读取
20220305-00:36:56      shape: (13807, 36)

20220305-00:36:56  -------------------------读取完毕: (13807, 36) 2022-03-05 00:36:56 -------------------------

20220305-00:36:56  手动衍生_py7个字段: {'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好'}
20220305-00:36:56  monthsremain_last_stop_date: last_stop_date - current_date
20220305-00:36:57  days_call_p: days_call / days_month
20220305-00:36:57  days_call_p_1: days_call_p + days_gprs
20220305-00:36:57  days_call_p_2: days_call_p_1 + days_gprs
20220305-00:36:57  days_call_p_3: days_call_p_2 + days_gprs
20220305-00:36:57  days_call_p_4: days_call_p_3 + days_gprs
20220305-00:36:57  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220305-00:36:59  数据量: (13807, 43)

20220305-00:36:59  检查数据
20220305-00:36:59  各账期数据量分布：
                       202011  data_predict    3170
                       202012  data_predict    4830
                       202101  data_predict    5807
                       dtype: int64
20220305-00:36:59  各账期数据量不一致
20220305-00:36:59  以nan填充缺少账期的记录
20220305-00:36:59      修改后：
                       202011  data_predict    5807
                       202012  data_predict    5807
                       202101  data_predict    5807
                       dtype: int64)
20220305-00:36:59  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！


20220305-00:36:59  填充数值型&类别型字段缺失值
20220305-00:36:59  日期型字段缺失值情况：
                       last_stop_date    3614
                       dtype: int64

                   ----------------------------------------- 当月 类别型 onthot 
20220305-00:36:59  ['if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video']

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220305-00:36:59  (5807, 34)
20220305-00:36:59  筛选衍生字段的 原始/手动衍生_sql 字段

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220305-00:36:59  字段个数：24, 添加字段：None
20220305-00:36:59  (5807, 58)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220305-00:36:59  字段个数：6, 添加字段：None
20220305-00:36:59  (5807, 64)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220305-00:36:59  字段个数：12, 添加字段：None
20220305-00:36:59  (5807, 76)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220305-00:36:59  字段个数：9, 添加字段：None
20220305-00:37:00  (5807, 85)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220305-00:37:00  字段个数：17, 添加字段：None
20220305-00:37:00  (5807, 102)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220305-00:37:00  字段个数：18, 添加字段：None
20220305-00:37:00  (5807, 120)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220305-00:37:00  字段个数：15, 添加字段：None
20220305-00:37:00  (5807, 135)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220305-00:37:00  ('more0cnt', '近3月大于0的月份数')
20220305-00:37:00  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220305-00:37:00  (5807, 151)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220305-00:37:00  字段个数：1, 添加字段：None
20220305-00:37:00  (5807, 152)

                   ----------------------------------------- 汇总最终宽表 
20220305-00:37:00  table.shape:(5807, 152)

20220305-00:37:00  保存宽表结果至：./binaryclassify/eg//predictscore~202101/predict_data~202101~1.csv

20220305-00:37:01  计算字段之间的相关性系数
20220305-00:37:01  
                       count    10153.0
                       mean    0.179
                       std    0.192
                       min    0.0
                       25%    0.053
                       50%    0.11
                       75%    0.232
                       max    1.0
                       dtype: float64


                   ------------------------------- 计算宽表字段psi ------------------------------------ 
                    
                    20220305-00:37:01  my toolmodule.dataprep.PsiTransformer_DF transform
                    20220305-00:37:01      开始时间：2022-03-05 00:37:01
                    20220305-00:37:01      data in : (5807, 163)
                    20220305-00:37:01      self已带有id_X属性 2461051380616
                    20220305-00:37:01      首次从X获取id_X_new属性 2279003072904
                    20220305-00:37:01      data in2: (5807, 157)
                    20220305-00:37:01      对154个数值字段进行分箱：['innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_last_defer', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__days_call_p', 'grow__calling_cnt', 'grow__gprs_flow_5g', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_now_rest', 'grow__gprs_resource', 'grow__nos_calling', 'grow__gprs_flow_commu', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'grow__gprs_flow_busy', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__gprs_flow_5g', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_flow_game', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
                    20220305-00:37:02      timedata_predict 计算稳定度（不区分正负例）：self.col_psi_all_
                    20220305-00:37:04      data out: (5807, 157)
                    20220305-00:37:04      transform轨迹：PsiTransformer_DF(Ncase='0', Pcase='1', bins=None, col_ignore=None, fit_pop_all=True, precision=6, , psi_limit=0.1, trans_na_error=True, warn_mark=' PsiTransformer')
                    20220305-00:37:04      结束时间：2022-03-05 00:37:04 耗时(3s)
20220305-00:37:04  保存Psi至：./binaryclassify/eg//predictscore~202101/predict_Psi~202011~202101~1.pkl
20220305-00:37:04  保存dis_exam至：./binaryclassify/eg//predictscore~202101/predict_dis_exam~202101~1.pkl
20220305-00:37:04  结束时间：2022-03-05 00:37:04
20220305-00:37:04  耗时：7 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: stage取值为create时,r_limit, iv_limit参数无效，将被忽略
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例) ['account_id']字段多出3302个取值, .head(5):
                      old  new
field      value              
account_id 100986667  NaN  1.0
           101819657  NaN  1.0
           101825777  NaN  1.0
           101975204  NaN  1.0
           101980894  NaN  1.0
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例)，38个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.340979
grow__gprs_resource             1.785077
wave__gprs_resource             0.755426
min__gprs_now_rest              0.730217
more0cnt__calling_dura          0.455215
moreq25cnt__arpu                0.446588
more0cnt__nos_calling           0.397075
moreq25cnt__calling_dura        0.386738
moreq25cnt__calling_cnt         0.346987
wave__gprs_now_defer            0.345288
grow__arpu                      0.307122
moreq25cnt__nos_calling         0.288231
moreq25cnt__calling_diff_cnt    0.282327
moreq25cnt__gprs_last_defer     0.254088
min__gprs_last_defer            0.253901
moreq25cnt__nos_calling_diff    0.249688
wave__calling_dura              0.247836
sep__gprs_now_rest              0.241178
wave__gprs_now_rest             0.233839
wave__nos_calling               0.224964
sep__nos_calling                0.216541
min__arpu                       0.210894
min__nos_calling                0.184967
sep__nos_calling_diff           0.179759
wave__calling_cnt               0.171294
wave__calling_diff_cnt          0.167304
avg__days_call_p                0.163810
min__gprs_flow_busy             0.155698
min__calling_dura               0.155593
min__nos_calling_diff           0.155511
wave__call_use                  0.154944
min__calling_diff_dura          0.130831
min__calling_cnt                0.122384
min__call_use                   0.115924
min__gprs_resource              0.109532
min__calling_diff_cnt           0.104693
moreq25cnt__gprs_flow_commu     0.104205
moreq25cnt__gprs_flow_busy      0.102720
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)

                   ###################################################################### 预测打分过程
                    
20220305-00:37:04  开始时间：2022-03-05 00:37:04
20220305-00:37:04  模型名称：模型示例
20220305-00:37:04  预测账期：202101
20220305-00:37:04  提取模型结果: ratio_1_2 | pipeline2 | RandomForestClassifier_DF - 默认参数
20220305-00:37:04  模型 [宽带探索]~训练~测试 账期：~202011~202012
20220305-00:37:04  最优模型的流水线不是pipeline1，为进行“top原因匹配”， 加载train_model_flows，从中获取pipeline1
20220305-00:37:04      加载模型集合：./binaryclassify/eg/traintest~202011~202012/train_model_flows~202011~202012.pkl
20220305-00:37:04      从train_model_flows中获取pipeline1
20220305-00:37:04  建模时效果评估数据集：data_timeout

20220305-00:37:04  ------------------------- 读取数据: ./binaryclassify/eg//predictscore~202101/predict_data~202101~1.csv 2022-03-05 00:37:04 -------------------------
20220305-00:37:04      src: file
20220305-00:37:04      condition: None
20220305-00:37:04      col_need(150): ['acct_month', 'user_id', 'sms_cnt', 'call_fee_local', 'account_id', 'innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'greatest_gprs_app', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__calling_cnt', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_resource', 'grow__nos_calling', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
20220305-00:37:04      col_del: None
20220305-00:37:04      col_char: None
20220305-00:37:04      col_num: None
20220305-00:37:04      col_date: None
20220305-00:37:04      nrows: None
20220305-00:37:04      if_coltolower: False
20220305-00:37:04      kwargs: {}

20220305-00:37:04      读取
20220305-00:37:04  -------------------------读取完毕: (5807, 150) 2022-03-05 00:37:04 -------------------------

20220305-00:37:04  补齐流水线删除的12个fit_in_colnames_字段
20220305-00:37:04      数据量：(5807, 162)

20220305-00:37:04  数据账期校验:
20220305-00:37:04      通过

20220305-00:37:04  最优模型 - pipeline2 - 数据转换
20220305-00:37:04      从流水线中获取WoeTransformer_DF
20220305-00:37:04      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）
20220305-00:37:09      转换前shape：(5807, 162)
20220305-00:37:09      转换后shape：(5807, 144)

20220305-00:37:09  top原因匹配
20220305-00:37:09      pipeline1 - 数据转换
20220305-00:37:09      col_notcause：['acct_month', 'phone_no_null', 'user_id', 'account_id', 'last_stop_date']
20220305-00:37:09      从流水线中获取WoeTransformer_DF
20220305-00:37:09      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）

20220305-00:37:09      数据分箱（union1） 2022-03-05 00:37:09
20220305-00:37:13      转换前shape：(5807, 162)
20220305-00:37:13      转换后shape：(5807, 151)

20220305-00:37:13      woe转换 2022-03-05 00:37:13
20220305-00:37:15      转换前shape：(5807, 151)
20220305-00:37:15      转换后shape：(5807, 139)

20220305-00:37:15      确定动因字段 2022-03-05 00:37:15
20220305-00:37:15      剔除非动因字段（0个）：set()
20220305-00:37:15      动因字段：139个

20220305-00:37:15      计算动因字段的相关矩阵，删除高相关字段
20220305-00:37:15      输入为相关性系数矩阵
20220305-00:37:15      提取相关性超过0.8的字段
20220305-00:37:15      需要删除62个高度相关字段: ['grow__gprs_last_defer', 'max__calling_cnt', 'grow__gprs_flow_commu', 'max__gprs_flow_commu', 'std__gprs_flow_busy', 'avg__days_call_p_4', 'max__gprs_flow_busy', 'std__gprs_flow_roam', 'avg__gprs_resource', 'wave__gprs_flow_music', 'max__arpu', 'moreq25cnt__calling_dura', 'max__calling_diff_cnt', 'min__gprs_resource', 'avg__gprs_flow_short', 'avg__call_use', 'moreq25cnt__calling_diff_cnt', 'avg__nos_call', 'min__gprs_flow_video', 'avg__gprs_now_rest', 'avg__nos_calling_diff', 'more0cnt__calling_dura', 'min__call_use', 'avg__gprs_last_defer', 'max__nos_calling', 'max__gprs_last_defer', 'min__calling_cnt', 'moreq25cnt__gprs_flow_video', 'std__gprs_flow_commu', 'wave__gprs_flow_commu', 'avg__calling_dura', 'avg__call_dura_roam', 'max__gprs_flow_video', 'min__calling_dura', 'grow__calling_cnt', 'nos_calling', 'moreq25cnt__gprs_last_defer', 'min__gprs_last_defer', 'grow__gprs_flow_short', 'calling_cnt', 'nos_calling_diff', 'max__gprs_now_rest', 'moreq25cnt__gprs_flow_commu', 'max__calling_dura', 'min__gprs_flow_busy', 'wave__gprs_resource', 'calling_diff_dura', 'wave__gprs_flow_short', 'arpu', 'gprs_flow_commu', 'moreq25cnt__calling_cnt', 'sep__gprs_now_rest', 'sep__gprs_flow_commu', 'sep__gprs_flow_5g', 'moreq25cnt__nos_calling', 'gprs_flow_music', 'min__calling_diff_dura', 'avg__calling_diff_dura', 'std__gprs_flow_short', 'min__nos_calling', 'min__gprs_flow_music', 'gprs_flow_busy']
20220305-00:37:15      动因字段：77个

20220305-00:37:15      从原因中删除用户量过小的 字段-取值
20220305-00:37:15      阈值 valuecount_limit= 50
20220305-00:37:16      将1个字段的1个取值（用户量<=50）从原因中剔除（对应的woe置为-999）

20220305-00:37:16      原因排序 2022-03-05 00:37:16
20220305-00:37:16      top1 2022-03-05 00:37:16
20220305-00:37:16      top2 2022-03-05 00:37:16
20220305-00:37:16      top3 2022-03-05 00:37:16
20220305-00:37:16      排序结束 2022-03-05 00:37:16

20220305-00:37:16      将woe<=woe_thred（0)的原因置空
20220305-00:37:16      top1: colwoe_top1字段最小值0.405 > woe_thred（0）,无需处理
20220305-00:37:16      top2: colwoe_top2字段最小值0.27 > woe_thred（0）,无需处理
20220305-00:37:16      top3: 将65行woe<=woe_thred（0)的colname_top3, colcomment_top3, colvalue_top3, colwoe_top3置空


20220305-00:37:16  模型预测

20220305-00:37:16  匹配各分数档位查准率、提升度（非累计）

20220305-00:37:16  概率得分描述统计：
                                 score
                       count  5807.000
                       mean     36.911
                       std      17.482
                       min       2.000
                       25%      24.000
                       50%      36.000
                       75%      48.000
                       max      97.000

20220305-00:37:16  概率得分分段统计：
                                       用户量      占比
                       (-0.001, 10.0]     283  0.048734
                       (10.0, 20.0]       862  0.148442
                       (20.0, 30.0]      1076  0.185294
                       (30.0, 40.0]      1164  0.200448
                       (40.0, 50.0]      1254  0.215946
                       (50.0, 60.0]       719  0.123816
                       (60.0, 70.0]       215  0.037024
                       (70.0, 80.0]       109  0.018770
                       (80.0, 90.0]       101  0.017393
                       (90.0, 100.0]       24  0.004133

20220305-00:37:16  模型稳定度：0.10796

                   结果数据展示：
                           acct_month      user_id model_name  month_train  month_test  score  score_cut  precision lift  sms_cnt  call_fee_local         colname_top1  \
                       0       202101  22398527764   模型示例       202011      202012   79.0          1      0.525  3.7      0.0             0.0  min__gprs_flow_roam   
                       20      202101  21203418265   模型示例       202011      202012   76.0          1      0.525  3.7      0.0             0.0        gprs_resource   
                   
                                           colcomment_top1     colvalue_top1  colwoe_top1         colname_top2                colcomment_top2      colvalue_top2  colwoe_top2         colname_top3  \
                       0   gprs-国内漫游-流量：近3月最小值   (841986.0, inf]     2.341806  avg__gprs_flow_busy      gprs-忙时-流量：近3月均值   (9385382.0, inf]     2.212262      gprs_flow_video   
                       20                 gprs国内资源总量  (6291466.5, inf]     0.931558   min__gprs_now_rest  当月gprs资源余量：近3月最小值  (13145287.5, inf]     0.553768  grow__gprs_resource   
                   
                                         colcomment_top3    colvalue_top3  colwoe_top3  
                       0                  视频类应用流量       (5.5, inf]     1.193639  
                       20  gprs国内资源总量：近3月成长率  (0.576729, inf]     0.404688  

20220305-00:37:16  保存结果数据至：./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~1.csv
20220305-00:37:16  保存数据处理流水线至：./binaryclassify/eg//predictscore~202101/predict_result~202011~202012~202101~1.pkl

20220305-00:37:17  结束时间：2022-03-05 00:37:17
20220305-00:37:17  耗时：12 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     FeatureUnion 下列字段重复，仅保留前一列 153列 => 151列：['greatest_gprs_app~video', 'greatest_gprs_app~commu']
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer timedata_predict 计算稳定性(不区分正负例)，32个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.536776
grow__gprs_resource             2.021586
wave__gprs_resource             0.863295
more0cnt__calling_dura          0.432391
wave__gprs_now_rest             0.413107
wave__gprs_now_defer            0.384293
sep__gprs_now_rest              0.378664
more0cnt__nos_calling           0.376485
moreq25cnt__calling_dura        0.351272
min__gprs_last_defer            0.346204
moreq25cnt__gprs_last_defer     0.345807
moreq25cnt__calling_cnt         0.337524
moreq25cnt__arpu                0.334193
grow__arpu                      0.305034
moreq25cnt__nos_calling         0.284954
moreq25cnt__calling_diff_cnt    0.283729
wave__nos_calling               0.238865
wave__calling_dura              0.237461
sep__nos_calling                0.226924
moreq25cnt__nos_calling_diff    0.225852
min__nos_calling                0.168328
wave__call_use                  0.157558
avg__days_call_p                0.152634
min__arpu                       0.148964
sep__nos_calling_diff           0.147080
min__calling_dura               0.144337
min__nos_calling_diff           0.140919
std__gprs_resource              0.127419
wave__calling_diff_cnt          0.126684
wave__calling_cnt               0.113016
min__calling_diff_dura          0.108346
min__gprs_flow_busy             0.102262
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer time2 计算稳定性(不区分正负例)，28个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.492302
grow__gprs_resource             2.021586
wave__gprs_resource             0.582955
more0cnt__calling_dura          0.432391
wave__gprs_now_rest             0.422484
wave__gprs_now_defer            0.381192
sep__gprs_now_rest              0.378664
more0cnt__nos_calling           0.376485
moreq25cnt__calling_dura        0.351272
moreq25cnt__gprs_last_defer     0.345807
moreq25cnt__gprs_flow_busy      0.342774
min__gprs_last_defer            0.342301
moreq25cnt__calling_cnt         0.337524
moreq25cnt__arpu                0.334193
grow__arpu                      0.310942
moreq25cnt__calling_diff_cnt    0.283729
wave__nos_calling               0.238865
wave__calling_dura              0.236711
wave__calling_cnt               0.233292
moreq25cnt__nos_calling_diff    0.225852
std__gprs_now_rest              0.212844
min__call_use                   0.172747
min__nos_calling                0.168328
min__calling_diff_cnt           0.158226
wave__call_use                  0.157558
min__calling_dura               0.139671
avg__days_call_p                0.130243
min__arpu                       0.120335
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer  X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: 模型稳定度：0.10796

  mapped = lib.map_infer(values, f, convert=convert_dtype)
20220305-00:37:17  ==========================================================================================

20220305-00:37:17  =========================================== 2份：[8, 9] ==========================================
20220305-00:37:17  修改Info，用于分批预测
20220305-00:37:17  condition: right(user_id::text, 1) in ('8', '9')
                   table_predict:./binaryclassify/eg//predictscore~202101/predict_data~202101~2.csv
                   table_score:./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~2.csv

                   ###################################################################### 预测集加工
                    
20220305-00:37:17  开始时间：2022-03-05 00:37:17
20220305-00:37:17  参数设置：
                       Info.auto_pair2: False
                       table_in: ml.mid_eg_recent_predict_202101
                       Info.iv_limit: 0.05
                       Info.r_limit: 0.95
                       step: predict
                       Info.model_name: 模型示例
                       stage: create

20220305-00:37:17  ------------------------- 读取数据: ml.mid_eg_recent_predict_202101 2022-03-05 00:37:17 -------------------------
20220305-00:37:17      src: gp
20220305-00:37:17      condition: right(user_id::text, 1) in ('8', '9')
20220305-00:37:17      col_need(36): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'innet_months', 'last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'if_nolimit', 'if_5g_dinner', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:37:17      col_del: None
20220305-00:37:17      col_char(7): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'if_nolimit', 'if_5g_dinner']
20220305-00:37:17      col_num(28): ['innet_months', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220305-00:37:17      col_date(1): ['last_stop_date']
20220305-00:37:17      nrows: None
20220305-00:37:17      if_coltolower: True
20220305-00:37:17      kwargs: {}

20220305-00:37:17      读取
20220305-00:37:17      shape: (7580, 36)

20220305-00:37:17  -------------------------读取完毕: (7580, 36) 2022-03-05 00:37:17 -------------------------

20220305-00:37:17  手动衍生_py7个字段: {'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好'}
20220305-00:37:17  monthsremain_last_stop_date: last_stop_date - current_date
20220305-00:37:17  days_call_p: days_call / days_month
20220305-00:37:17  days_call_p_1: days_call_p + days_gprs
20220305-00:37:17  days_call_p_2: days_call_p_1 + days_gprs
20220305-00:37:17  days_call_p_3: days_call_p_2 + days_gprs
20220305-00:37:17  days_call_p_4: days_call_p_3 + days_gprs
20220305-00:37:17  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220305-00:37:18  数据量: (7580, 43)

20220305-00:37:18  检查数据
20220305-00:37:18  各账期数据量分布：
                       202011  data_predict    1748
                       202012  data_predict    2639
                       202101  data_predict    3193
                       dtype: int64
20220305-00:37:18  各账期数据量不一致
20220305-00:37:18  以nan填充缺少账期的记录
20220305-00:37:18      修改后：
                       202011  data_predict    3193
                       202012  data_predict    3193
                       202101  data_predict    3193
                       dtype: int64)
20220305-00:37:18  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！


20220305-00:37:18  填充数值型&类别型字段缺失值
20220305-00:37:18  日期型字段缺失值情况：
                       last_stop_date    1999
                       dtype: int64

                   ----------------------------------------- 当月 类别型 onthot 
20220305-00:37:18  ['if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video']

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220305-00:37:18  (3193, 34)
20220305-00:37:18  筛选衍生字段的 原始/手动衍生_sql 字段

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220305-00:37:18  字段个数：24, 添加字段：None
20220305-00:37:18  (3193, 58)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220305-00:37:18  字段个数：6, 添加字段：None
20220305-00:37:18  (3193, 64)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220305-00:37:18  字段个数：12, 添加字段：None
20220305-00:37:19  (3193, 76)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220305-00:37:19  字段个数：9, 添加字段：None
20220305-00:37:19  (3193, 85)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220305-00:37:19  字段个数：17, 添加字段：None
20220305-00:37:19  (3193, 102)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220305-00:37:19  字段个数：18, 添加字段：None
20220305-00:37:19  (3193, 120)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220305-00:37:19  字段个数：15, 添加字段：None
20220305-00:37:19  (3193, 135)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220305-00:37:19  ('more0cnt', '近3月大于0的月份数')
20220305-00:37:19  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220305-00:37:19  (3193, 151)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220305-00:37:19  字段个数：1, 添加字段：None
20220305-00:37:19  (3193, 152)

                   ----------------------------------------- 汇总最终宽表 
20220305-00:37:19  table.shape:(3193, 152)

20220305-00:37:19  保存宽表结果至：./binaryclassify/eg//predictscore~202101/predict_data~202101~2.csv

20220305-00:37:19  计算字段之间的相关性系数
20220305-00:37:19  
                       count    10153.0
                       mean    0.187
                       std    0.194
                       min    0.0
                       25%    0.057
                       50%    0.114
                       75%    0.245
                       max    0.982
                       dtype: float64


                   ------------------------------- 计算宽表字段psi ------------------------------------ 
                    
                    20220305-00:37:19  my toolmodule.dataprep.PsiTransformer_DF transform
                    20220305-00:37:19      开始时间：2022-03-05 00:37:19
                    20220305-00:37:19      data in : (3193, 163)
                    20220305-00:37:19      self已带有id_X属性 2461051380616
                    20220305-00:37:19      首次从X获取id_X_new属性 2279001396232
                    20220305-00:37:19      data in2: (3193, 157)
                    20220305-00:37:19      对154个数值字段进行分箱：['innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_last_defer', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__days_call_p', 'grow__calling_cnt', 'grow__gprs_flow_5g', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_now_rest', 'grow__gprs_resource', 'grow__nos_calling', 'grow__gprs_flow_commu', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'grow__gprs_flow_busy', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__gprs_flow_5g', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_flow_game', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
                    20220305-00:37:20      timedata_predict 计算稳定度（不区分正负例）：self.col_psi_all_
                    20220305-00:37:22      data out: (3193, 157)
                    20220305-00:37:22      transform轨迹：PsiTransformer_DF(Ncase='0', Pcase='1', bins=None, col_ignore=None, fit_pop_all=True, precision=6, , psi_limit=0.1, trans_na_error=True, warn_mark=' PsiTransformer')
                    20220305-00:37:22      结束时间：2022-03-05 00:37:22 耗时(2s)
20220305-00:37:22  保存Psi至：./binaryclassify/eg//predictscore~202101/predict_Psi~202011~202101~2.pkl
20220305-00:37:22  保存dis_exam至：./binaryclassify/eg//predictscore~202101/predict_dis_exam~202101~2.pkl
20220305-00:37:22  结束时间：2022-03-05 00:37:22
20220305-00:37:22  耗时：5 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: stage取值为create时,r_limit, iv_limit参数无效，将被忽略
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例) ['account_id']字段多出1887个取值, .head(5):
                      old  new
field      value              
account_id 101975450  NaN  1.0
           101980213  NaN  1.0
           102154765  NaN  1.0
           102156412  NaN  1.0
           102179084  NaN  1.0
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例)，41个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.238223
grow__arpu                      0.969113
wave__gprs_resource             0.789542
min__gprs_now_rest              0.721784
moreq25cnt__arpu                0.457013
more0cnt__calling_dura          0.437654
moreq25cnt__calling_dura        0.383961
more0cnt__nos_calling           0.376877
moreq25cnt__calling_cnt         0.340123
wave__gprs_now_defer            0.338167
moreq25cnt__calling_diff_cnt    0.280895
moreq25cnt__nos_calling         0.273398
wave__calling_dura              0.256378
moreq25cnt__nos_calling_diff    0.250034
moreq25cnt__gprs_last_defer     0.238749
min__gprs_last_defer            0.235656
wave__nos_calling               0.214658
sep__gprs_now_rest              0.211318
min__arpu                       0.209782
wave__gprs_now_rest             0.208822
sep__nos_calling                0.202628
min__nos_calling                0.183109
sep__nos_calling_diff           0.178910
min__gprs_flow_busy             0.177239
wave__calling_cnt               0.169817
wave__calling_diff_cnt          0.163727
min__nos_calling_diff           0.155981
wave__call_use                  0.155863
min__calling_dura               0.145880
avg__days_call_p                0.139573
moreq25cnt__gprs_flow_commu     0.131546
min__calling_diff_dura          0.125730
sep__gprs_flow_commu            0.116475
min__gprs_resource              0.116102
moreq25cnt__gprs_flow_busy      0.113955
min__call_use                   0.108712
min__gprs_flow_commu            0.108375
min__calling_cnt                0.107796
wave__gprs_flow_commu           0.106171
min__calling_diff_cnt           0.103766
moreq25cnt__gprs_flow_video     0.103583
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:      PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)

                   ###################################################################### 预测打分过程
                    
20220305-00:37:22  开始时间：2022-03-05 00:37:22
20220305-00:37:22  模型名称：模型示例
20220305-00:37:22  预测账期：202101
20220305-00:37:22  提取模型结果: ratio_1_2 | pipeline2 | RandomForestClassifier_DF - 默认参数
20220305-00:37:22  模型 [宽带探索]~训练~测试 账期：~202011~202012
20220305-00:37:22  最优模型的流水线不是pipeline1，为进行“top原因匹配”， 加载train_model_flows，从中获取pipeline1
20220305-00:37:22      加载模型集合：./binaryclassify/eg/traintest~202011~202012/train_model_flows~202011~202012.pkl
20220305-00:37:22      从train_model_flows中获取pipeline1
20220305-00:37:22  建模时效果评估数据集：data_timeout

20220305-00:37:22  ------------------------- 读取数据: ./binaryclassify/eg//predictscore~202101/predict_data~202101~2.csv 2022-03-05 00:37:22 -------------------------
20220305-00:37:22      src: file
20220305-00:37:22      condition: None
20220305-00:37:22      col_need(150): ['acct_month', 'user_id', 'sms_cnt', 'call_fee_local', 'account_id', 'innet_months', 'monthsremain_last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_busy', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p', 'days_call_p_4', 'nos_call', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'greatest_gprs_app', 'if_5g_dinner~是', 'greatest_gprs_app~commu', 'greatest_gprs_app~video', 'avg__calling_diff_dura', 'avg__days_call_p', 'avg__gprs_now_defer', 'avg__nos_calling_diff', 'avg__nos_call', 'avg__gprs_flow_music', 'avg__calling_cnt', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__calling_diff_cnt', 'avg__gprs_last_defer', 'avg__days_call_p_4', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_now_rest', 'avg__call_use', 'avg__gprs_resource', 'avg__nos_calling', 'avg__gprs_flow_commu', 'avg__arpu', 'avg__gprs_flow_short', 'avg__calling_dura', 'avg__gprs_flow_roam', 'avg__gprs_flow_busy', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__gprs_flow_5g', 'sep__gprs_now_rest', 'sep__nos_calling', 'sep__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__gprs_flow_music', 'wave__calling_cnt', 'wave__gprs_flow_video', 'wave__calling_diff_cnt', 'wave__gprs_now_rest', 'wave__call_use', 'wave__gprs_resource', 'wave__nos_calling', 'wave__gprs_flow_commu', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__calling_diff_dura', 'grow__calling_cnt', 'grow__calling_diff_cnt', 'grow__gprs_last_defer', 'grow__gprs_resource', 'grow__nos_calling', 'grow__arpu', 'grow__gprs_flow_short', 'grow__calling_dura', 'max__calling_diff_dura', 'max__days_call_p', 'max__nos_calling_diff', 'max__nos_call', 'max__calling_cnt', 'max__gprs_flow_video', 'max__calling_diff_cnt', 'max__gprs_last_defer', 'max__days_call_p_4', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__call_use', 'max__nos_calling', 'max__gprs_flow_commu', 'max__arpu', 'max__calling_dura', 'max__gprs_flow_busy', 'min__calling_diff_dura', 'min__nos_calling_diff', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_flow_video', 'min__calling_diff_cnt', 'min__gprs_last_defer', 'min__days_call_p_4', 'min__gprs_now_rest', 'min__call_use', 'min__gprs_resource', 'min__nos_calling', 'min__gprs_flow_commu', 'min__arpu', 'min__gprs_flow_short', 'min__calling_dura', 'min__gprs_flow_roam', 'min__gprs_flow_busy', 'std__calling_diff_dura', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_5g', 'std__calling_diff_cnt', 'std__gprs_last_defer', 'std__gprs_now_rest', 'std__call_use', 'std__gprs_resource', 'std__nos_calling', 'std__gprs_flow_commu', 'std__gprs_flow_short', 'std__calling_dura', 'std__gprs_flow_roam', 'std__gprs_flow_busy', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_busy', 'valuecnt__if_nolimit~是']
20220305-00:37:22      col_del: None
20220305-00:37:22      col_char: None
20220305-00:37:22      col_num: None
20220305-00:37:22      col_date: None
20220305-00:37:22      nrows: None
20220305-00:37:22      if_coltolower: False
20220305-00:37:22      kwargs: {}

20220305-00:37:22      读取
20220305-00:37:22  -------------------------读取完毕: (3193, 150) 2022-03-05 00:37:22 -------------------------

20220305-00:37:22  补齐流水线删除的12个fit_in_colnames_字段
20220305-00:37:22      数据量：(3193, 162)

20220305-00:37:22  数据账期校验:
20220305-00:37:22      通过

20220305-00:37:22  最优模型 - pipeline2 - 数据转换
20220305-00:37:22      从流水线中获取WoeTransformer_DF
20220305-00:37:22      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）
20220305-00:37:25      转换前shape：(3193, 162)
20220305-00:37:25      转换后shape：(3193, 144)

20220305-00:37:25  top原因匹配
20220305-00:37:25      pipeline1 - 数据转换
20220305-00:37:25      col_notcause：['acct_month', 'phone_no_null', 'user_id', 'account_id', 'last_stop_date']
20220305-00:37:25      从流水线中获取WoeTransformer_DF
20220305-00:37:25      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）

20220305-00:37:25      数据分箱（union1） 2022-03-05 00:37:25
20220305-00:37:27      转换前shape：(3193, 162)
20220305-00:37:27      转换后shape：(3193, 151)

20220305-00:37:27      woe转换 2022-03-05 00:37:27
20220305-00:37:29      转换前shape：(3193, 151)
20220305-00:37:29      转换后shape：(3193, 139)

20220305-00:37:29      确定动因字段 2022-03-05 00:37:29
20220305-00:37:29      剔除非动因字段（0个）：set()
20220305-00:37:29      动因字段：139个

20220305-00:37:29      计算动因字段的相关矩阵，删除高相关字段
20220305-00:37:29      输入为相关性系数矩阵
20220305-00:37:29      提取相关性超过0.8的字段
20220305-00:37:30      需要删除62个高度相关字段: ['grow__gprs_last_defer', 'max__calling_cnt', 'grow__gprs_flow_commu', 'max__gprs_flow_commu', 'std__gprs_flow_busy', 'avg__days_call_p_4', 'max__gprs_flow_busy', 'std__gprs_flow_roam', 'avg__gprs_resource', 'wave__gprs_flow_music', 'max__arpu', 'moreq25cnt__calling_dura', 'max__calling_diff_cnt', 'min__gprs_resource', 'avg__gprs_flow_short', 'avg__call_use', 'moreq25cnt__calling_diff_cnt', 'avg__nos_call', 'min__gprs_flow_video', 'avg__gprs_now_rest', 'avg__nos_calling_diff', 'more0cnt__calling_dura', 'min__call_use', 'avg__gprs_last_defer', 'max__nos_calling', 'max__gprs_last_defer', 'min__calling_cnt', 'moreq25cnt__gprs_flow_video', 'std__gprs_flow_commu', 'wave__gprs_flow_commu', 'avg__calling_dura', 'avg__call_dura_roam', 'max__gprs_flow_video', 'min__calling_dura', 'grow__calling_cnt', 'nos_calling', 'moreq25cnt__gprs_last_defer', 'min__gprs_last_defer', 'grow__gprs_flow_short', 'calling_cnt', 'nos_calling_diff', 'max__gprs_now_rest', 'moreq25cnt__gprs_flow_commu', 'max__calling_dura', 'min__gprs_flow_busy', 'wave__gprs_resource', 'calling_diff_dura', 'wave__gprs_flow_short', 'arpu', 'gprs_flow_commu', 'moreq25cnt__calling_cnt', 'sep__gprs_now_rest', 'sep__gprs_flow_commu', 'sep__gprs_flow_5g', 'moreq25cnt__nos_calling', 'gprs_flow_music', 'min__calling_diff_dura', 'avg__calling_diff_dura', 'std__gprs_flow_short', 'min__nos_calling', 'min__gprs_flow_music', 'gprs_flow_busy']
20220305-00:37:30      动因字段：77个

20220305-00:37:30      从原因中删除用户量过小的 字段-取值
20220305-00:37:30      阈值 valuecount_limit= 50
20220305-00:37:30      将6个字段的6个取值（用户量<=50）从原因中剔除（对应的woe置为-999）

20220305-00:37:30      原因排序 2022-03-05 00:37:30
20220305-00:37:30      top1 2022-03-05 00:37:30
20220305-00:37:30      top2 2022-03-05 00:37:30
20220305-00:37:30      top3 2022-03-05 00:37:30
20220305-00:37:30      排序结束 2022-03-05 00:37:30

20220305-00:37:30      将woe<=woe_thred（0)的原因置空
20220305-00:37:30      top1: colwoe_top1字段最小值0.27 > woe_thred（0）,无需处理
20220305-00:37:30      top2: 将18行woe<=woe_thred（0)的colname_top2, colcomment_top2, colvalue_top2, colwoe_top2置空
20220305-00:37:30      top3: 将60行woe<=woe_thred（0)的colname_top3, colcomment_top3, colvalue_top3, colwoe_top3置空


20220305-00:37:30  模型预测

20220305-00:37:30  匹配各分数档位查准率、提升度（非累计）

20220305-00:37:30  概率得分描述统计：
                                 score
                       count  3193.000
                       mean     36.891
                       std      17.202
                       min       2.000
                       25%      24.000
                       50%      37.000
                       75%      48.000
                       max      95.000

20220305-00:37:30  概率得分分段统计：
                                       用户量      占比
                       (-0.001, 10.0]     149  0.046665
                       (10.0, 20.0]       484  0.151582
                       (20.0, 30.0]       571  0.178829
                       (30.0, 40.0]       639  0.200125
                       (40.0, 50.0]       719  0.225180
                       (50.0, 60.0]       395  0.123708
                       (60.0, 70.0]       115  0.036016
                       (70.0, 80.0]        63  0.019731
                       (80.0, 90.0]        50  0.015659
                       (90.0, 100.0]        8  0.002505

20220305-00:37:30  模型稳定度：0.11808

                   结果数据展示：
                          acct_month      user_id model_name  month_train  month_test  score  score_cut  precision lift  sms_cnt  call_fee_local         colname_top1                colcomment_top1  \
                       0      202101  31587686588   模型示例       202011      202012   54.0          3      0.283    2      2.0             0.0  wave__gprs_now_rest  当月gprs资源余量：近3月波动性   
                       5      202101  32622800089   模型示例       202011      202012   48.0          3      0.283    2      0.0             0.0  wave__gprs_now_rest  当月gprs资源余量：近3月波动性   
                   
                            colvalue_top1  colwoe_top1          colname_top2                  colcomment_top2    colvalue_top2  colwoe_top2          colname_top3                  colcomment_top3  \
                       0  (0.020437, inf]     0.548009        call_dura_roam                    省际漫游-时长      (19.5, inf]     0.437679  wave__gprs_now_defer  可延递流量资源总量：近3月波动性   
                       5  (0.020437, inf]     0.548009  wave__gprs_now_defer  可延递流量资源总量：近3月波动性  (0.193923, inf]     0.409623         gprs_now_rest                 当月gprs资源余量   
                   
                            colvalue_top3  colwoe_top3  
                       0  (0.193923, inf]     0.409623  
                       5      (-inf, 1.5]     0.269824  

20220305-00:37:31  保存结果数据至：./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101~2.csv
20220305-00:37:31  保存数据处理流水线至：./binaryclassify/eg//predictscore~202101/predict_result~202011~202012~202101~2.pkl

20220305-00:37:31  结束时间：2022-03-05 00:37:31
20220305-00:37:31  耗时：9 s


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     FeatureUnion 下列字段重复，仅保留前一列 153列 => 151列：['greatest_gprs_app~video', 'greatest_gprs_app~commu']
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer timedata_predict 计算稳定性(不区分正负例)，33个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.420563
grow__arpu                      0.965380
wave__gprs_resource             0.891833
more0cnt__calling_dura          0.415280
wave__gprs_now_rest             0.379628
wave__gprs_now_defer            0.376779
more0cnt__nos_calling           0.356825
moreq25cnt__calling_dura        0.348625
moreq25cnt__arpu                0.343221
sep__gprs_now_rest              0.340982
moreq25cnt__calling_cnt         0.330755
min__gprs_last_defer            0.329375
moreq25cnt__gprs_last_defer     0.327873
moreq25cnt__calling_diff_cnt    0.282293
moreq25cnt__nos_calling         0.270206
wave__calling_dura              0.245824
wave__nos_calling               0.228240
moreq25cnt__nos_calling_diff    0.226182
sep__nos_calling                0.214580
min__nos_calling                0.166556
wave__call_use                  0.158484
min__arpu                       0.154732
std__gprs_resource              0.147333
sep__nos_calling_diff           0.146317
min__nos_calling_diff           0.141367
min__calling_dura               0.134991
avg__days_call_p                0.129281
wave__calling_diff_cnt          0.123578
std__gprs_now_rest              0.117607
min__gprs_flow_busy             0.114234
wave__calling_cnt               0.111819
min__calling_diff_dura          0.103713
moreq25cnt__gprs_flow_busy      0.102994
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline2 PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer time2 计算稳定性(不区分正负例)，27个字段稳定性>=psi_limit（0.1）：
grow__gprs_last_defer           2.441914
grow__arpu                      0.900938
wave__gprs_resource             0.577674
more0cnt__calling_dura          0.415280
wave__gprs_now_rest             0.389738
wave__gprs_now_defer            0.375184
moreq25cnt__gprs_flow_busy      0.371604
more0cnt__nos_calling           0.356825
moreq25cnt__calling_dura        0.348625
moreq25cnt__arpu                0.343221
sep__gprs_now_rest              0.340982
moreq25cnt__calling_cnt         0.330755
moreq25cnt__gprs_last_defer     0.327873
min__gprs_last_defer            0.325476
moreq25cnt__calling_diff_cnt    0.282293
wave__calling_dura              0.245824
wave__calling_cnt               0.235479
wave__nos_calling               0.228240
moreq25cnt__nos_calling_diff    0.226182
std__gprs_now_rest              0.221049
min__nos_calling                0.166556
wave__call_use                  0.159113
min__call_use                   0.158042
min__calling_diff_cnt           0.149512
min__calling_dura               0.130103
min__arpu                       0.119192
avg__days_call_p                0.111178
dtype: float64
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning:     pipeline1 PsiTransformer  X未带有y_carrier属性，不计算稳定度（区分正负例）
  mapped = lib.map_infer(values, f, convert=convert_dtype)


D:\installdir_xj\Anaconda3\lib\site-packages\pandas\core\series.py:3848: UserWarning: 模型稳定度：0.11808

  mapped = lib.map_infer(values, f, convert=convert_dtype)
20220305-00:37:31  ==========================================================================================


                   ###################################################################### 整理分数数据
                    
20220305-00:37:31  合并3个批次的分数结果
20220305-00:37:31      0: (6300, 23)
20220305-00:37:31      1: (5807, 23)
20220305-00:37:31      2: (3193, 23)
20220305-00:37:31  分数数据合计shape: (15300, 23)

20220305-00:37:31  进行分数排名与划分档位
20220305-00:37:31  分数档位概览：
                       100    153
                       99    153
                       98    153
                       97    153
                       96    153
                       95    153
                       94    153
                       93    153
                       92    153
                       91    153
                       90    153
                       89    153
                       88    153
                       87    153
                       86    153
                       85    153
                       84    153
                       83    153
                       82    153
                       81    153
                       80    153
                       79    153
                       78    153
                       77    153
                       76    153
                       75    153
                       74    153
                       73    153
                       72    153
                       71    153
                       70    153
                       69    153
                       68    153
                       67    153
                       66    153
                       65    153
                       64    153
                       63    153
                       62    153
                       61    153
                       60    153
                       59    153
                       58    153
                       57    153
                       56    153
                       55    153
                       54    153
                       53    153
                       52    153
                       51    153
                       50    153
                       49    153
                       48    153
                       47    153
                       46    153
                       45    153
                       44    153
                       43    153
                       42    153
                       41    153
                       40    153
                       39    153
                       38    153
                       37    153
                       36    153
                       35    153
                       34    153
                       33    153
                       32    153
                       31    153
                       30    153
                       29    153
                       28    153
                       27    153
                       26    153
                       25    153
                       24    153
                       23    153
                       22    153
                       21    153
                       20    153
                       19    153
                       18    153
                       17    153
                       16    153
                       15    153
                       14    153
                       13    153
                       12    153
                       11    153
                       10    153
                       9    153
                       8    153
                       7    153
                       6    153
                       5    153
                       4    153
                       3    153
                       2    153
                       1    153
                       dtype: int64

20220305-00:37:31  保存结果数据至：./binaryclassify/eg//predictscore~202101/predict_score_data~202011~202012~202101.csv