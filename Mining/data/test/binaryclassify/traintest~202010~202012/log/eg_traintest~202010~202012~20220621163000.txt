
                   ###################################################################### 加工训练账期近n月基础数据
                    
20220621-16:30:00  开始时间：2022-06-21 16:30:00
20220621-16:30:00  ---- month: 202010
20220621-16:30:00  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:30:00  检查 kehujingyingbudb.ml_xy_eg_m


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-47-3fb005ff9f25>", line 7, in <module>
    base_train[model_name], Info = privy_basedatafun('train', Info, nmg_yaxin=nmg_yaxin)
  File "D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py", line 668, in privy_basedatafun
    field_all = get_field(Info.table_XY).index
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 356, in get_field
    field = my_sql_fun(sql, method='read', index_col='col_name').data_type
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 232, in my_sql_fun
    conn1 = psycopg2.connect(dbname=dbname, user=user, password=pwd, port=port, host=host, client_encoding='UTF-8')
  File "D:\Python for Windows\lib\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "192.168.100.112", port 5432 failed: Connection timed out (0x0000274C/10060)
	Is the server running on that host and accepting TCP/IP connections?


                   ###################################################################### 训练集加工
                    


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-48-b018edf03e34>", line 2, in <module>
    create_train[model_name], Info = tab_explore_create(base_train[model_name], Info, 'create', src)
KeyError: '模型示例'


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-49-8ceb8b32ab1c>", line 1, in <module>
    base_train[model_name]
KeyError: '模型示例'
                   Out[50]: 20220621-16:30:50  {}
20220621-16:31:01  开始时间：2022-06-21 16:31:01
20220621-16:31:01  ---- month: 202010
20220621-16:31:01  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:31:01  检查 kehujingyingbudb.ml_xy_eg_m


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-51-542d49823be3>", line 1, in <module>
    base_train[model_name], Info = privy_basedatafun('train', Info, nmg_yaxin=nmg_yaxin)
  File "D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py", line 668, in privy_basedatafun
    field_all = get_field(Info.table_XY).index
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 356, in get_field
    field = my_sql_fun(sql, method='read', index_col='col_name').data_type
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 232, in my_sql_fun
    conn1 = psycopg2.connect(dbname=dbname, user=user, password=pwd, port=port, host=host, client_encoding='UTF-8')
  File "D:\Python for Windows\lib\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "192.168.100.112", port 5432 failed: Connection timed out (0x0000274C/10060)
	Is the server running on that host and accepting TCP/IP connections?


                   ###################################################################### 训练集加工
                    


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-52-ca4e7d293d4b>", line 3, in <module>
    create_train[model_name], Info = tab_explore_create(base_train[model_name], Info, 'create', src)
KeyError: '模型示例'
                   Out[53]: 20220621-16:31:49  {}


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-54-8ceb8b32ab1c>", line 1, in <module>
    base_train[model_name]
KeyError: '模型示例'
20220621-16:32:19  开始时间：2022-06-21 16:32:19
20220621-16:32:19  ---- month: 202010
20220621-16:32:19  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:32:19  检查 kehujingyingbudb.ml_xy_eg_m


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-55-f3ad3811ffdb>", line 1, in <module>
    privy_basedatafun('train', Info, nmg_yaxin=nmg_yaxin)
  File "D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py", line 668, in privy_basedatafun
    field_all = get_field(Info.table_XY).index
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 356, in get_field
    field = my_sql_fun(sql, method='read', index_col='col_name').data_type
  File "D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\datatrans.py", line 232, in my_sql_fun
    conn1 = psycopg2.connect(dbname=dbname, user=user, password=pwd, port=port, host=host, client_encoding='UTF-8')
  File "D:\Python for Windows\lib\site-packages\psycopg2\__init__.py", line 122, in connect
    conn = _connect(dsn, connection_factory=connection_factory, **kwasync)
psycopg2.OperationalError: connection to server at "192.168.100.112", port 5432 failed: Connection timed out (0x0000274C/10060)
	Is the server running on that host and accepting TCP/IP connections?

20220621-16:33:38  开始时间：2022-06-21 16:33:38
20220621-16:33:38  ---- month: 202010
20220621-16:33:38  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:33:38  检查 kehujingyingbudb.ml_xy_eg_m
20220621-16:33:38      78 列
20220621-16:33:39      202010账期： 15000行
20220621-16:33:39      202009账期： 18000行
20220621-16:33:39      202008账期： 10000行


20220621-16:33:39  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.ml_xy_eg_m  group by flag_eg
20220621-16:33:39      dis_train_total: {'count': 68000, 'Pcount': 8036, 'prop': 0.118}



20220621-16:33:39  ---- 建表语句（限定202010账期当月目标用户）：
                       drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
                       select pg_sleep(5);
                       create  table kehujingyingbudb.mid_eg_model_train_202010 as 
                       select acct_month, user_id, flag_eg ,row_number() over(order by acct_month desc, random()) rnself 
                       from kehujingyingbudb.ml_xy_eg_m
                       where acct_month>=202008 and acct_month<=202010 and user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3 and flag_eg is not null;
20220621-16:33:44      sql执行完毕
20220621-16:33:44  统计kehujingyingbudb.mid_eg_model_train_202010行列数
20220621-16:33:44      行数：{'202009': 15048, '202010': 12449}
                       列数：4


20220621-16:33:44  ---- 建表语句（划分训练/验证数据集）：
                       drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
                       create  table kehujingyingbudb.mid_eg_user_train_202010 as 
                       (select acct_month user_acct_month, 'data_timein' data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself <= 500)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=1 order by rnself limit 1000)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=0 order by rnself limit 2000) ;
20220621-16:33:44      sql执行完毕
20220621-16:33:44  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.mid_eg_user_train_202010  group by flag_eg
20220621-16:33:44      dis_train_sample {'count': 3500, 'Pcount': 1076, 'prop': 0.307}



20220621-16:33:44  ---- 关联近n月数据：
                       drop table if exists kehujingyingbudb.mid_eg_recent_train_202010;
                       create  table kehujingyingbudb.mid_eg_recent_train_202010 as
                       select user_acct_month, data_use, acct_month, phone_no_null, phone_no_tm, user_id, dinner_id, account_id, innet_date, innet_months, age, sex, age_add, sex_add, user_status, last_stop_date, dinner, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, if_5g_term, if_jt, start_level, cred_type, if_cred_multi, arpu, pay_cnt, pay_fee, acct_balance, term_model, term_brand, term_type, sk_type, if_new_term, calling_cnt, calling_dura, called_cnt, called_dura, calling_diff_cnt, calling_diff_dura, gprs_flow, gprs_flow_4g, gprs_flow_5g, gprs_flow_busy, gprs_flow_idle, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_roam, gprs_flow_gat, days_gat, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, call_fee_roam, gprs_income, gprs_fee, call_fee, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game, dayvalue_calling_dura, dayvalue_gprs_flow, dayvalue_user_status, dayvalue_phone_no_null, flag_eg, score_flag_eg, score_flag_eg2 
                       from (
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_timein') a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       union all 
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202008) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202006 and acct_month<=202008) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202009) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202007 and acct_month<=202009) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202010) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       ) t;
20220621-16:33:45      sql执行完毕
20220621-16:33:45  统计kehujingyingbudb.mid_eg_recent_train_202010行列数
20220621-16:33:45      9298行，78列

                   --------------------------------- 核验各账期数据量  ---------------------------------------------- 
20220621-16:33:45  sql语句：
                       select user_acct_month, data_use, acct_month, flag_eg, count(1) 
                       from kehujingyingbudb.mid_eg_recent_train_202010 
                       group by user_acct_month, data_use, acct_month, flag_eg 
                       order by user_acct_month, data_use, acct_month, flag_eg

20220621-16:33:45  结果：
                      user_acct_month     data_use  acct_month  flag_eg  count
                   0           202010  data_timein      202008      NaN    333
                   1           202010  data_timein      202009      0.0    424
                   2           202010  data_timein      202009      1.0     76
                   3           202010  data_timein      202010      0.0    424
                   4           202010  data_timein      202010      1.0     76
                   5           202010   data_train      202008      NaN   1965
                   6           202010   data_train      202009      0.0   2000
                   7           202010   data_train      202009      1.0   1000
                   8           202010   data_train      202010      0.0   2000
                   9           202010   data_train      202010      1.0   1000


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:895: UserWarning: 下列账期用户量不同，请检查！
                             acct_month  flag_eg  count
user_acct_month data_use                               
202010          data_timein      202008      0.0    333
                data_timein      202009      1.0    500
                data_timein      202010      1.0    500
                data_train       202008      0.0   1965
                data_train       202009      1.0   3000
                data_train       202010      1.0   3000
  warnings.warn(w); time.sleep(seconds)
20220621-16:33:48  
                   ---- 删除中间表
20220621-16:33:48  drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
20220621-16:33:48      sql执行完毕
20220621-16:33:48  drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
20220621-16:33:48      sql执行完毕

20220621-16:33:48  ---- 返回结果表名：kehujingyingbudb.mid_eg_recent_train_202010
20220621-16:33:48  ---- 将Info保存至./binaryclassify/eg/traintest~202010~202012/Info~base_train.pkl

20220621-16:33:48  结束时间：2022-06-21 16:33:48
20220621-16:33:48  耗时：10 s

                   ###################################################################### 探索模型宽表
                    
20220621-16:37:41  开始时间：2022-06-21 16:37:41
20220621-16:37:41  参数设置：
                       stage: explore
                       table_in: kehujingyingbudb.mid_eg_recent_train_202010
                       Info.iv_limit: 0.05
                       Info.model_name: 模型示例
                       step: train
                       Info.auto_pair2: False
                       Info.r_limit: 0.95

20220621-16:37:41  field_base: 92行

20220621-16:37:41  删除7个available_notzd“不可用”字段：['cred_type', 'called_dura', 'days_roam', 'dayvalue_calling_dura', 'dayvalue_gprs_flow', 'dayvalue_user_status', 'dayvalue_phone_no_null']
20220621-16:37:41  field_base: 85行

20220621-16:37:41  删除1个基于“不可用”字段加工的手动衍生_py字段：
                        field_name                 formula
                   54  days_roam_p  days_roam / days_month
20220621-16:37:41  field_base: 84行
20220621-16:37:41  ------------------------- 读取数据: kehujingyingbudb.mid_eg_recent_train_202010 2022-06-21 16:37:41 -------------------------
20220621-16:37:41      src: gp
20220621-16:37:41      condition: data_use='data_train'
20220621-16:37:41      col_need(71): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2', 'innet_date', 'last_stop_date', 'phone_no_null', 'phone_no_tm', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220621-16:37:41      col_del: None
20220621-16:37:41      col_char(22): ['acct_month', 'phone_no_null', 'phone_no_tm', 'user_id', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220621-16:37:41      col_num(45): ['innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2']
20220621-16:37:41      col_date(2): ['innet_date', 'last_stop_date']
20220621-16:37:41      nrows: None
20220621-16:37:41      if_coltolower: True
20220621-16:37:41      kwargs: {}

20220621-16:37:41      读取
20220621-16:37:46      shape: (7965, 71)

20220621-16:37:46  将score_flag_eg2字段类型(object): .astype(float)
20220621-16:37:47  -------------------------读取完毕: (7965, 71) 2022-06-21 16:37:47 -------------------------

20220621-16:37:47  手动衍生_py12个字段: {'monthsaready_last_stop_date': '最后停机时间：已发生时长', 'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_gprs_p': '上网天数占比', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好', 'paste_dinner_innet_months': '主套餐、入网时长：交叉', 'ago_score_flag_eg': '模型示例的分数(历史)', 'ago_score_flag_eg2': '模型示例2的分数(历史)'}
20220621-16:37:47  monthsaready_last_stop_date: current_date - last_stop_date
20220621-16:37:47  monthsremain_last_stop_date: last_stop_date - current_date
20220621-16:37:47  days_gprs_p: days_gprs / days_month
20220621-16:37:47  days_call_p: days_call / days_month
20220621-16:37:47  days_call_p_1: days_call_p + days_gprs
20220621-16:37:47  days_call_p_2: days_call_p_1 + days_gprs
20220621-16:37:47  days_call_p_3: days_call_p_2 + days_gprs
20220621-16:37:47  days_call_p_4: days_call_p_3 + days_gprs
20220621-16:37:47  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220621-16:37:52  paste_dinner_innet_months: (dinner, innet_months)
20220621-16:37:55  ago_score_flag_eg: {'notago_tovalue': 1}
20220621-16:37:55  ago_score_flag_eg2: {'notago_tovalue': 1}
20220621-16:37:55  数据量: (7965, 83)

20220621-16:37:55  检查数据
20220621-16:37:55  各账期数据量分布：
                       202008  data_train    1965
                       202009  data_train    3000
                       202010  data_train    3000
                       dtype: int64
20220621-16:37:55  各账期数据量不一致
20220621-16:37:55  以nan填充缺少账期的记录
20220621-16:37:56      修改后：
                       202008  data_train    3000
                       202009  data_train    3000
                       202010  data_train    3000
                       dtype: int64)
20220621-16:37:56  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！

20220621-16:37:56  字段类型分布: 
                       float64    55
                       object    26
                       datetime64[ns]    2
                       dtype: int64


20220621-16:38:02  填充数值型&类别型字段缺失值
20220621-16:38:02  日期型字段缺失值情况：
                       innet_date    1035
                       last_stop_date    1035
                       dtype: int64

20220621-16:38:02  正负例分布：
                       data_train  202010  0    2000
                       data_train  202010  1    1000
                       dtype: int64

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220621-16:38:02  新数据newdata的shape：(3000, 77)
20220621-16:38:02  数据转换
20220621-16:38:20  转换后shape：(3000, 30)
20220621-16:38:21  从流水线中获取WoeTransformer_DF
20220621-16:38:21  首个数据集，直接返回woe编码结果
20220621-16:38:21  筛选衍生字段的 原始/手动衍生_sql 字段
20220621-16:38:21  数值型字段：有效字段27个，其中当月自动衍生字段26个，近n月自动衍生字段26个
20220621-16:38:21  类别型字段：有效字段3个（强制加入0个）:
20220621-16:38:21      当月自动衍生_py字段3个: ['if_nolimit~是', 'if_5g_dinner~是', 'start_level~银卡']
20220621-16:38:21      近n月自动衍生_py字段3个: ['if_nolimit~是', 'if_5g_dinner~是', 'start_level~银卡']

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220621-16:38:21  字段个数：26, 添加字段：['flag_eg']
20220621-16:38:21  新数据newdata的shape：(3000, 27)
20220621-16:38:21  数据转换
20220621-16:38:33  转换后shape：(3000, 24)
20220621-16:38:33  从流水线中获取WoeTransformer_DF
20220621-16:38:37  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有1对
20220621-16:38:37      从中二者中剔除字段1个字段:['avg__monthsremain_last_stop_date']
20220621-16:38:37      其中待新增中剔除1个
20220621-16:38:37      其中原宽表中剔除0个

20220621-16:38:37  已有宽表shape：(3000, 30)
20220621-16:38:37  向宽表中加入字段（23个）：['avg__gprs_now_defer', 'avg__dinner_fee', 'avg__call_dura_roam', 'avg__calling_diff_cnt', 'avg__nos_calling_diff', 'avg__calling_cnt', 'avg__gprs_resource', 'avg__gprs_now_rest', 'avg__gprs_flow_commu', 'avg__gprs_flow_roam', 'avg__age_add', 'avg__calling_dura', 'avg__arpu', 'avg__gprs_last_defer', 'avg__call_use', 'avg__gprs_flow_video', 'avg__nos_calling', 'avg__gprs_flow_short', 'avg__gprs_flow_game', 'avg__gprs_flow_busy', 'avg__gprs_flow_music', 'avg__gprs_flow_5g', 'avg__calling_diff_dura']
20220621-16:38:37  从宽表中删除字段（0个）：[]
20220621-16:38:37  目前宽表shape：(3000, 53)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220621-16:38:37  字段个数：26, 添加字段：['flag_eg']
20220621-16:38:37  新数据newdata的shape：(3000, 27)
20220621-16:38:37  数据转换
20220621-16:38:45  转换后shape：(3000, 15)
20220621-16:38:45  从流水线中获取WoeTransformer_DF
20220621-16:38:49  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有1对
20220621-16:38:49      从中二者中剔除字段1个字段:['sep__gprs_flow_game']
20220621-16:38:49      其中待新增中剔除1个
20220621-16:38:49      其中原宽表中剔除0个

20220621-16:38:49  已有宽表shape：(3000, 53)
20220621-16:38:49  向宽表中加入字段（14个）：['sep__gprs_now_rest', 'sep__calling_diff_cnt', 'sep__gprs_flow_music', 'sep__nos_calling', 'sep__monthsremain_last_stop_date', 'sep__calling_cnt', 'sep__gprs_flow_commu', 'sep__gprs_flow_short', 'sep__gprs_flow_video', 'sep__gprs_resource', 'sep__calling_diff_dura', 'sep__nos_calling_diff', 'sep__calling_dura', 'sep__gprs_flow_5g']
20220621-16:38:49  从宽表中删除字段（0个）：[]
20220621-16:38:49  目前宽表shape：(3000, 67)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220621-16:38:49  字段个数：26, 添加字段：['flag_eg']
20220621-16:38:49  新数据newdata的shape：(3000, 27)
20220621-16:38:49  数据转换
20220621-16:38:56  转换后shape：(3000, 8)
20220621-16:38:56  从流水线中获取WoeTransformer_DF
20220621-16:39:00  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有5对
20220621-16:39:00      从中二者中剔除字段5个字段:['wave__gprs_resource', 'wave__monthsremain_last_stop_date', 'sep__gprs_flow_video', 'sep__gprs_flow_short', 'wave__gprs_flow_game']
20220621-16:39:00      其中待新增中剔除3个
20220621-16:39:00      其中原宽表中剔除2个

20220621-16:39:00  已有宽表shape：(3000, 67)
20220621-16:39:00  向宽表中加入字段（5个）：['wave__gprs_flow_short', 'wave__gprs_now_rest', 'wave__gprs_flow_video', 'wave__gprs_flow_music', 'wave__gprs_flow_commu']
20220621-16:39:00  从宽表中删除字段（2个）：['sep__gprs_flow_video', 'sep__gprs_flow_short']
20220621-16:39:00  目前宽表shape：(3000, 70)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220621-16:39:00  字段个数：26, 添加字段：['flag_eg']
20220621-16:39:01  新数据newdata的shape：(3000, 27)
20220621-16:39:01  数据转换
20220621-16:39:11  转换后shape：(3000, 20)
20220621-16:39:11  从流水线中获取WoeTransformer_DF
20220621-16:39:12  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有6对
20220621-16:39:12      从中二者中剔除字段6个字段:['grow__calling_dura', 'grow__gprs_flow_music', 'grow__monthsremain_last_stop_date', 'grow__gprs_last_defer', 'gprs_flow_game', 'gprs_flow_short']
20220621-16:39:12      其中待新增中剔除4个
20220621-16:39:12      其中原宽表中剔除2个

20220621-16:39:12  已有宽表shape：(3000, 70)
20220621-16:39:12  向宽表中加入字段（16个）：['grow__nos_calling', 'grow__gprs_flow_game', 'grow__call_use', 'grow__calling_diff_dura', 'grow__calling_diff_cnt', 'grow__calling_cnt', 'grow__gprs_flow_5g', 'grow__gprs_flow_busy', 'grow__dinner_fee', 'grow__gprs_flow_video', 'grow__gprs_flow_roam', 'grow__gprs_resource', 'grow__gprs_now_rest', 'grow__nos_calling_diff', 'grow__gprs_flow_commu', 'grow__gprs_flow_short']
20220621-16:39:12  从宽表中删除字段（2个）：['gprs_flow_game', 'gprs_flow_short']
20220621-16:39:12  目前宽表shape：(3000, 84)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220621-16:39:12  字段个数：26, 添加字段：['flag_eg']
20220621-16:39:12  新数据newdata的shape：(3000, 27)
20220621-16:39:12  数据转换
20220621-16:39:22  转换后shape：(3000, 26)
20220621-16:39:22  从流水线中获取WoeTransformer_DF
20220621-16:39:32  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有10对
20220621-16:39:32      从中二者中剔除字段10个字段:['max__age_add', 'max__days_call_p_4', 'max__gprs_flow_game', 'dinner_fee', 'max__gprs_flow_5g', 'gprs_now_defer', 'avg__gprs_flow_short', 'avg__calling_dura', 'max__gprs_flow_video', 'avg__gprs_flow_roam']
20220621-16:39:32      其中待新增中剔除5个
20220621-16:39:32      其中原宽表中剔除5个

20220621-16:39:32  已有宽表shape：(3000, 84)
20220621-16:39:32  向宽表中加入字段（21个）：['max__nos_calling_diff', 'max__gprs_flow_short', 'max__calling_dura', 'max__calling_cnt', 'max__gprs_last_defer', 'max__call_use', 'max__nos_calling', 'max__calling_diff_dura', 'max__nos_call', 'max__gprs_flow_music', 'max__dinner_fee', 'max__gprs_flow_busy', 'max__monthsremain_last_stop_date', 'max__gprs_now_defer', 'max__call_dura_roam', 'max__gprs_now_rest', 'max__calling_diff_cnt', 'max__gprs_flow_roam', 'max__arpu', 'max__gprs_flow_commu', 'max__gprs_resource']
20220621-16:39:32  从宽表中删除字段（5个）：['gprs_now_defer', 'dinner_fee', 'avg__gprs_flow_short', 'avg__gprs_flow_roam', 'avg__calling_dura']
20220621-16:39:32  目前宽表shape：(3000, 100)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220621-16:39:32  字段个数：26, 添加字段：['flag_eg']
20220621-16:39:32  新数据newdata的shape：(3000, 27)
20220621-16:39:32  数据转换
20220621-16:39:40  转换后shape：(3000, 14)
20220621-16:39:40  从流水线中获取WoeTransformer_DF
20220621-16:39:45  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有1对
20220621-16:39:45      从中二者中剔除字段1个字段:['min__monthsremain_last_stop_date']
20220621-16:39:45      其中待新增中剔除1个
20220621-16:39:45      其中原宽表中剔除0个

20220621-16:39:45  已有宽表shape：(3000, 100)
20220621-16:39:45  向宽表中加入字段（13个）：['min__call_use', 'min__gprs_flow_short', 'min__gprs_flow_busy', 'min__gprs_flow_video', 'min__arpu', 'min__gprs_flow_roam', 'min__gprs_now_rest', 'min__gprs_resource', 'min__age_add', 'min__dinner_fee', 'min__gprs_flow_commu', 'min__gprs_last_defer', 'min__gprs_flow_music']
20220621-16:39:45  从宽表中删除字段（0个）：[]
20220621-16:39:45  目前宽表shape：(3000, 113)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220621-16:39:45  字段个数：26, 添加字段：['flag_eg']
20220621-16:39:45  新数据newdata的shape：(3000, 27)
20220621-16:39:45  数据转换
20220621-16:39:54  转换后shape：(3000, 22)
20220621-16:39:54  从流水线中获取WoeTransformer_DF
20220621-16:40:04  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有6对
20220621-16:40:04      从中二者中剔除字段6个字段:['std__gprs_flow_game', 'std__gprs_flow_music', 'std__gprs_flow_short', 'std__gprs_flow_5g', 'std__gprs_flow_commu', 'std__gprs_flow_busy']
20220621-16:40:04      其中待新增中剔除6个
20220621-16:40:04      其中原宽表中剔除0个

20220621-16:40:04  已有宽表shape：(3000, 113)
20220621-16:40:04  向宽表中加入字段（16个）：['std__gprs_last_defer', 'std__nos_calling_diff', 'std__call_dura_roam', 'std__calling_diff_dura', 'std__dinner_fee', 'std__gprs_flow_roam', 'std__arpu', 'std__nos_calling', 'std__call_use', 'std__calling_dura', 'std__gprs_flow_video', 'std__gprs_resource', 'std__calling_diff_cnt', 'std__nos_call', 'std__calling_cnt', 'std__gprs_now_rest']
20220621-16:40:04  从宽表中删除字段（0个）：[]
20220621-16:40:04  目前宽表shape：(3000, 129)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220621-16:40:04  ('more0cnt', '近3月大于0的月份数')
20220621-16:40:04  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220621-16:40:05  新数据newdata的shape：(3000, 53)
20220621-16:40:05  数据转换
20220621-16:40:16  转换后shape：(3000, 18)
20220621-16:40:16  从流水线中获取WoeTransformer_DF
20220621-16:40:18  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有6对
20220621-16:40:18      从中二者中剔除字段6个字段:['more0cnt__monthsremain_last_stop_date', 'moreq25cnt__gprs_flow_game', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__calling_diff_cnt']
20220621-16:40:18      其中待新增中剔除6个
20220621-16:40:18      其中原宽表中剔除0个

20220621-16:40:18  已有宽表shape：(3000, 129)
20220621-16:40:18  向宽表中加入字段（12个）：['moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__gprs_resource', 'moreq25cnt__gprs_flow_busy', 'more0cnt__nos_calling', 'moreq25cnt__call_use', 'moreq25cnt__calling_cnt', 'more0cnt__calling_cnt', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__calling_dura', 'moreq25cnt__arpu']
20220621-16:40:18  从宽表中删除字段（0个）：[]
20220621-16:40:18  目前宽表shape：(3000, 141)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220621-16:40:18  字段个数：3, 添加字段：['flag_eg']
20220621-16:40:18  新数据newdata的shape：(3000, 4)
20220621-16:40:18  数据转换
20220621-16:40:22  转换后shape：(3000, 3)
20220621-16:40:22  从流水线中获取WoeTransformer_DF
20220621-16:40:22  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有3对
20220621-16:40:22      从中二者中剔除字段3个字段:['valuecnt__start_level~银卡', 'if_nolimit~是', 'if_5g_dinner~是']
20220621-16:40:22      其中待新增中剔除1个
20220621-16:40:22      其中原宽表中剔除2个

20220621-16:40:22  已有宽表shape：(3000, 141)
20220621-16:40:22  向宽表中加入字段（2个）：['valuecnt__if_nolimit~是', 'valuecnt__if_5g_dinner~是']
20220621-16:40:22  从宽表中删除字段（2个）：['if_5g_dinner~是', 'if_nolimit~是']
20220621-16:40:22  目前宽表shape：(3000, 141)

                   ----------------------------------------- 汇总最终宽表 
20220621-16:40:22  计算字段之间的相关性系数
20220621-16:40:23  
                       count    9870.0
                       mean    0.26
                       std    0.175
                       min    0.001
                       25%    0.137
                       50%    0.212
                       75%    0.33
                       max    0.95
                       dtype: float64

20220621-16:40:23  iv分布：
                       count    141.0
                       mean    0.169
                       std    0.135
                       min    0.051
                       25%    0.074
                       50%    0.101
                       75%    0.25
                       max    0.667
                       dtype: float64

20220621-16:40:23  woe_accum(累计)概览：                                            value    0    1       woe  weight  woe_weight  ALL
                       max__gprs_flow_busy          (3451591.0, inf]  186  399  1.456362  0.3060    0.445647  585
                       gprs_flow_video                   (19.5, inf]  180  331  1.302309  0.2410    0.313856  511
                       max__gprs_flow_commu              (34.5, inf]  206  367  1.270633  0.2640    0.335447  573
                       gprs_flow_commu                    (8.5, inf]  196  349  1.270104  0.2510    0.318796  545
                       moreq25cnt__gprs_flow_video        (1.5, inf]  195  338  1.243194  0.2405    0.298988  533

20220621-16:40:23  最终宽表字段列表col_all:
20220621-16:40:23      len(col_all): 141
20220621-16:40:23      补充5个的字段（must_remain=是）：{'gprs_flow_short', 'greatest_gprs_app', 'gprs_flow_game', 'account_id', 'user_status'}
20220621-16:40:23      len(col_all): 146
20220621-16:40:23      补充账期、数据集名称、用户标识等，目标字段(Info.col_mark、Info.col_target)
20220621-16:40:23      len(col_all): 151

20220621-16:40:23      补充4个的字段（col_mark、col_target、condition、dict_sortscore、col_out）：{'sms_cnt', 'last_stop_date', 'phone_no_null', 'call_fee_local'}
20220621-16:40:23      len(col_all): 155
20220621-16:40:23  整理宽表数据字典
                   宽表数据字典概览 (155, 16):
                        是否宽表字段       field_name         comment dtype_db dtype_classify     field_src                                       table available available_notzd available_zd  \
                                  是  user_acct_month  观察期最后账期      NaN         类别型  手动衍生_sql                                         NaN       NaN             NaN          NaN   
                                  是         data_use      数据集名称      NaN         类别型  手动衍生_sql                                         NaN       NaN             NaN          NaN   
                                  是       acct_month            账期   bigint         类别型  手动衍生_sql  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                                  是    phone_no_null        手机号码  numeric         类别型          原始  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                                  是          user_id        手机号id     text         类别型          原始  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                   
                        formula          remark must_remain into_model is_cause        base_init  
                            NaN             NaN         NaN        NaN      NaN  user_acct_month  
                            NaN             NaN         NaN        NaN      NaN         data_use  
                            NaN             NaN         NaN        NaN       否       acct_month  
                            NaN  不参与自动衍生         NaN       删除       否    phone_no_null  
                            NaN             NaN         NaN        NaN       否          user_id  

20220621-16:40:23  保存Info至：./binaryclassify/eg/traintest~202010~202012/Info~tabexp.pkl
20220621-16:40:23  结束时间：2022-06-21 16:40:23
20220621-16:40:23  耗时：162 s


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: Pipeline_DF：verbose参数值被赋予print_indent后默认参数设置为None
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: FeatureUnion_DF：verbose参数值被赋予print_indent后默认参数设置为None
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: opera_pair_fun paste时存在非类别型字段，请确认: ['innet_months']
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: field_base中未包括下列字段，但实际数据 多出：{'user_acct_month', 'data_use'}
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: field_base中未规定下列字段数据类型，请确认默认类型是否正确：{'user_acct_month': 'object', 'data_use': 'object'}
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:     FeaturePrefilter_DF unique_limit(5000)小于X行数(3000), 添加unique_limit_actual：len(X)*0.99=2970
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:     NumStrSpliter 数据中未出现非数值型字段！
  convert=self.convert_dtype,
20220621-16:50:38  开始时间：2022-06-21 16:50:38
20220621-16:50:38  ---- month: 202010
20220621-16:50:38  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500
20220621-16:50:38  ---- field_base中acct_month字段为数值型，Info.Pcase参数取值为<class 'int'>，将Info.Pcase纠正为数值型

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:50:38  检查 kehujingyingbudb.ml_xy_eg_m
20220621-16:50:38      78 列
20220621-16:50:38      202010账期： 15000行
20220621-16:50:38      202009账期： 18000行
20220621-16:50:38      202008账期： 10000行


20220621-16:50:38  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.ml_xy_eg_m  group by flag_eg
20220621-16:50:38      dis_train_total: {'count': 68000, 'Pcount': 8036, 'prop': 0.118}



20220621-16:50:38  ---- 建表语句（限定202010账期当月目标用户）：
                       drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
                       select pg_sleep(5);
                       create  table kehujingyingbudb.mid_eg_model_train_202010 as 
                       select acct_month, user_id, flag_eg ,row_number() over(order by acct_month desc, random()) rnself 
                       from kehujingyingbudb.ml_xy_eg_m
                       where acct_month>=202008 and acct_month<=202010 and user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3 and flag_eg is not null;
20220621-16:50:43      sql执行完毕
20220621-16:50:43  统计kehujingyingbudb.mid_eg_model_train_202010行列数
20220621-16:50:44      行数：{'202009': 15048, '202010': 12449}
                       列数：4


20220621-16:50:44  ---- 建表语句（划分训练/验证数据集）：
                       drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
                       create  table kehujingyingbudb.mid_eg_user_train_202010 as 
                       (select acct_month user_acct_month, 'data_timein' data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself <= 500)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=1 order by rnself limit 1000)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=0 order by rnself limit 2000) ;
20220621-16:50:44      sql执行完毕
20220621-16:50:44  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.mid_eg_user_train_202010  group by flag_eg
20220621-16:50:44      dis_train_sample {'count': 3500, 'Pcount': 1078, 'prop': 0.308}



20220621-16:50:44  ---- 关联近n月数据：
                       drop table if exists kehujingyingbudb.mid_eg_recent_train_202010;
                       create  table kehujingyingbudb.mid_eg_recent_train_202010 as
                       select user_acct_month, data_use, acct_month, phone_no_null, phone_no_tm, user_id, dinner_id, account_id, innet_date, innet_months, age, sex, age_add, sex_add, user_status, last_stop_date, dinner, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, if_5g_term, if_jt, start_level, cred_type, if_cred_multi, arpu, pay_cnt, pay_fee, acct_balance, term_model, term_brand, term_type, sk_type, if_new_term, calling_cnt, calling_dura, called_cnt, called_dura, calling_diff_cnt, calling_diff_dura, gprs_flow, gprs_flow_4g, gprs_flow_5g, gprs_flow_busy, gprs_flow_idle, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_roam, gprs_flow_gat, days_gat, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, call_fee_roam, gprs_income, gprs_fee, call_fee, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game, dayvalue_calling_dura, dayvalue_gprs_flow, dayvalue_user_status, dayvalue_phone_no_null, flag_eg, score_flag_eg, score_flag_eg2 
                       from (
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_timein') a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       union all 
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202008) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202006 and acct_month<=202008) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202009) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202007 and acct_month<=202009) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202010) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       ) t;
20220621-16:50:44      sql执行完毕
20220621-16:50:44  统计kehujingyingbudb.mid_eg_recent_train_202010行列数
20220621-16:50:44      9289行，78列

                   --------------------------------- 核验各账期数据量  ---------------------------------------------- 
20220621-16:50:44  sql语句：
                       select user_acct_month, data_use, acct_month, flag_eg, count(1) 
                       from kehujingyingbudb.mid_eg_recent_train_202010 
                       group by user_acct_month, data_use, acct_month, flag_eg 
                       order by user_acct_month, data_use, acct_month, flag_eg

20220621-16:50:44  结果：
                      user_acct_month     data_use  acct_month  flag_eg  count
                   0           202010  data_timein      202008      NaN    348
                   1           202010  data_timein      202009      0.0    422
                   2           202010  data_timein      202009      1.0     78
                   3           202010  data_timein      202010      0.0    422
                   4           202010  data_timein      202010      1.0     78
                   5           202010   data_train      202008      NaN   1941
                   6           202010   data_train      202009      0.0   2000
                   7           202010   data_train      202009      1.0   1000
                   8           202010   data_train      202010      0.0   2000
                   9           202010   data_train      202010      1.0   1000


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:895: UserWarning: 下列账期用户量不同，请检查！
                             acct_month  flag_eg  count
user_acct_month data_use                               
202010          data_timein      202008      0.0    348
                data_timein      202009      1.0    500
                data_timein      202010      1.0    500
                data_train       202008      0.0   1941
                data_train       202009      1.0   3000
                data_train       202010      1.0   3000
  warnings.warn(w); time.sleep(seconds)
20220621-16:50:47  
                   ---- 删除中间表
20220621-16:50:47  drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
20220621-16:50:47      sql执行完毕
20220621-16:50:47  drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
20220621-16:50:47      sql执行完毕

20220621-16:50:47  ---- 返回结果表名：kehujingyingbudb.mid_eg_recent_train_202010
20220621-16:50:47  ---- 将Info保存至./binaryclassify/eg/traintest~202010~202012/Info~base_train.pkl

20220621-16:50:48  结束时间：2022-06-21 16:50:48
20220621-16:50:48  耗时：9 s
20220621-16:50:56  开始时间：2022-06-21 16:50:56
20220621-16:51:00  ---- month: 202010
20220621-16:51:20  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220621-16:51:45  检查 kehujingyingbudb.ml_xy_eg_m
20220621-16:51:45      78 列
20220621-16:51:45      202010账期： 15000行
20220621-16:51:45      202009账期： 18000行
20220621-16:51:45      202008账期： 10000行


20220621-16:51:55  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.ml_xy_eg_m  group by flag_eg
20220621-16:51:56      dis_train_total: {'count': 68000, 'Pcount': 8036, 'prop': 0.118}

                   Out[75]: 20220621-16:52:20  'train'
                   Out[77]: 20220621-16:52:36  'acct_month>=202008 and acct_month<=202010'
                   Out[78]: 20220621-16:52:45  "user_status='在网-正常' and \n    phone_no_null is null and\n    last_stop_date is not null and\n    innet_months >= 3"
                   Out[79]: 20220621-16:53:26  "user_status='在网-正常' and \n    phone_no_null is null and\n    last_stop_date is not null and\n    innet_months >= 3"
                   Out[80]: 20220621-16:53:59  "user_status='在网-正常' and \n    phone_no_null is null and\n    last_stop_date is not null and\n    innet_months >= 3"
                   Out[81]: 20220621-16:54:24  
                   model_name                                                      模型示例
                   month_train                                                       202010
                   month_test                                                        202012
                   Pcase_limit                                                         1000
                   traintable_ratio                                                       2
                   Pcumsum_limit                                                          2
                   timein_count                                                         500
                   timeout_limit                                                       1000
                   trainproc_ratiolist                                           [1, 2, 10]
                   iv_limit                                                            0.05
                   r_limit                                                             0.95
                   marketlevel                                                            1
                   short_name                                                            eg
                   table_XY                                     kehujingyingbudb.ml_xy_eg_m
                   s_field_base                                                   s_yw_fake
                   condition_base         \n    phone_no_null is null and\n    last_stop...
                   condition_add                                    user_status='在网-正常'
                   available_add                                            available_notzd
                   col_month                                                     acct_month
                   col_id                                                           user_id
                   col_target                                                       flag_eg
                   Pcase                                                                  1
                   Ncase                                                                  0
                   target_lag                                                             1
                   col_stratified                                                       NaN
                   col_out                                                     [acct_month]
                   dict_sortscore                {'sms_cnt': True, 'call_fee_local': False}
                   score_targetnull                                                   Ncase
                   field_base                                  field_name               ...
                   condition              user_status='在网-正常' and \n    phone_no_null is...
                   month_tabexp                                                      202010
                   model_wd_traintest           ./binaryclassify/eg/traintest~202010~202012
                   f_field_comment        ./binaryclassify/eg/traintest~202010~202012/ta...
                   col_del                                            [user_acct_month, rn]
                   table_train            ./binaryclassify/eg/traintest~202010~202012/tr...
                   table_test             ./binaryclassify/eg/traintest~202010~202012/te...
                   freq_limit                                                          0.95
                   unique_limit                                                        5000
                   valuecount_limit                                                      50
                   random_state                                                        None
                   n_recent                                                               3
                   Name: 模型示例, dtype: object
