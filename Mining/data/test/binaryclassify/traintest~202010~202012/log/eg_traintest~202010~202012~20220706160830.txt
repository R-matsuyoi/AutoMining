
                   ###################################################################### 加工训练账期近n月基础数据
                    
20220706-16:08:41  开始时间：2022-07-06 16:08:41
20220706-16:08:41  ---- month: 202010
20220706-16:08:41  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220706-16:08:41  检查 kehujingyingbudb.ml_xy_eg_m
20220706-16:08:42      78 列
20220706-16:08:42  select cast(acct_month as text) acct_month, count(1) from kehujingyingbudb.ml_xy_eg_m where cast(acct_month as text) <= '202010' group by acct_month
20220706-16:08:42      202010账期： 15000行
20220706-16:08:42      202009账期： 18000行
20220706-16:08:42      202008账期： 10000行


20220706-16:08:42  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.ml_xy_eg_m  group by flag_eg
20220706-16:08:42      dis_train_total: {'count': 68000, 'Pcount': 8036, 'prop': 0.118}



20220706-16:08:42  ---- 建表语句（限定202010账期当月目标用户）：
                       drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
                       select pg_sleep(5);
                       create  table kehujingyingbudb.mid_eg_model_train_202010 as 
                       select acct_month, user_id, flag_eg ,row_number() over(order by acct_month desc, random()) rnself 
                       from kehujingyingbudb.ml_xy_eg_m
                       where acct_month>=202008 and acct_month<=202010 and user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3 and
                           dayvalue_gprs_flow>0
                        and flag_eg is not null;
20220706-16:08:47      sql执行完毕
20220706-16:08:47  统计kehujingyingbudb.mid_eg_model_train_202010行列数
20220706-16:08:47  select cast(acct_month as text) acct_month, count(1) from kehujingyingbudb.mid_eg_model_train_202010  group by acct_month
20220706-16:08:48      行数：{'202009': 10854, '202010': 7148}
                       列数：4


20220706-16:08:48  ---- 建表语句（划分训练/验证数据集）：
                       drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
                       create  table kehujingyingbudb.mid_eg_user_train_202010 as 
                       (select acct_month user_acct_month, 'data_timein' data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself <= 500)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=1 order by rnself limit 1000)
                       union all
                       (select acct_month user_acct_month, 'data_train'  data_use, * from kehujingyingbudb.mid_eg_model_train_202010 where rnself > 500 and flag_eg=0 order by rnself limit 2000) ;
20220706-16:08:48      sql执行完毕
20220706-16:08:48  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.mid_eg_user_train_202010  group by flag_eg
20220706-16:08:48      dis_train_sample {'count': 3500, 'Pcount': 1067, 'prop': 0.305}



20220706-16:08:48  ---- 关联近n月数据：
                       drop table if exists kehujingyingbudb.mid_eg_recent_train_202010;
                       create  table kehujingyingbudb.mid_eg_recent_train_202010 as
                       select user_acct_month, data_use, acct_month, phone_no_null, phone_no_tm, user_id, dinner_id, account_id, innet_date, innet_months, age, sex, age_add, sex_add, user_status, last_stop_date, dinner, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, if_5g_term, if_jt, start_level, cred_type, if_cred_multi, arpu, pay_cnt, pay_fee, acct_balance, term_model, term_brand, term_type, sk_type, if_new_term, calling_cnt, calling_dura, called_cnt, called_dura, calling_diff_cnt, calling_diff_dura, gprs_flow, gprs_flow_4g, gprs_flow_5g, gprs_flow_busy, gprs_flow_idle, gprs_now_defer, gprs_flow_roam, call_dura_roam, days_roam, gprs_flow_gat, days_gat, days_gprs, days_call, nos_call, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, call_fee_roam, gprs_income, gprs_fee, call_fee, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game, dayvalue_calling_dura, dayvalue_gprs_flow, dayvalue_user_status, dayvalue_phone_no_null, flag_eg, score_flag_eg, score_flag_eg2 
                       from (
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_timein') a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       union all 
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202008) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202006 and acct_month<=202008) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202009) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202007 and acct_month<=202009) b on a.user_id = b.user_id
                       union all
                       select a.user_acct_month, a.data_use, b.*
                       from (select * from kehujingyingbudb.mid_eg_user_train_202010 where data_use='data_train' and acct_month=202010) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202008 and acct_month<=202010) b on a.user_id = b.user_id
                       ) t;
20220706-16:08:48      sql执行完毕
20220706-16:08:48  统计kehujingyingbudb.mid_eg_recent_train_202010行列数
20220706-16:08:48  select cast(acct_month as text) acct_month, count(1) from kehujingyingbudb.mid_eg_recent_train_202010  group by acct_month
20220706-16:08:48      10500行，78列

                   --------------------------------- 核验各账期数据量  ---------------------------------------------- 
20220706-16:08:48  sql语句：
                       select user_acct_month, data_use, acct_month, flag_eg, count(1) 
                       from kehujingyingbudb.mid_eg_recent_train_202010 
                       group by user_acct_month, data_use, acct_month, flag_eg 
                       order by user_acct_month, data_use, acct_month, flag_eg

20220706-16:08:48  结果：
                      user_acct_month     data_use  acct_month  flag_eg  count
                   0           202010  data_timein      202008      NaN    500
                   1           202010  data_timein      202009      0.0    433
                   2           202010  data_timein      202009      1.0     67
                   3           202010  data_timein      202010      0.0    433
                   4           202010  data_timein      202010      1.0     67
                   5           202010   data_train      202008      NaN   3000
                   6           202010   data_train      202009      0.0   2000
                   7           202010   data_train      202009      1.0   1000
                   8           202010   data_train      202010      0.0   2000
                   9           202010   data_train      202010      1.0   1000
20220706-16:08:48  
                   ---- 删除中间表
20220706-16:08:48  drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
20220706-16:08:49      sql执行完毕
20220706-16:08:49  drop table if exists kehujingyingbudb.mid_eg_user_train_202010;
20220706-16:08:49      sql执行完毕

20220706-16:08:49  ---- 返回结果表名：kehujingyingbudb.mid_eg_recent_train_202010
20220706-16:08:49  ---- 将Info保存至./binaryclassify/eg/traintest~202010~202012/Info~base_train.pkl

20220706-16:08:49  结束时间：2022-07-06 16:08:49
20220706-16:08:49  耗时：7 s
20220706-16:15:33  开始时间：2022-07-06 16:15:33
                   Out[83]: 20220706-16:15:37  'text'
20220706-16:15:43  ---- month: 202010
20220706-16:15:56  ---- 参数设置：
                       ---- step: train
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3
                       ---- Info.Pcase_limit: 1000
                       ---- Info.traintable_ratio: 2
                       ---- Info.Pcumsum_limit: 2
                       ---- Info.timein_count: 500
                   Out[89]: 20220706-16:16:00  '数值型'
                   Out[92]: 20220706-16:16:22  True

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220706-16:16:27  检查 kehujingyingbudb.ml_xy_eg_m
20220706-16:16:27      78 列
20220706-16:16:27  select cast(acct_month as text) acct_month, count(1) from kehujingyingbudb.ml_xy_eg_m where cast(acct_month as text) <= '202010' group by acct_month
20220706-16:16:34      202010账期： 15000行
20220706-16:16:34      202009账期： 18000行
20220706-16:16:34      202008账期： 10000行


20220706-16:16:45  正负例分布：select cast(flag_eg as text) flag_eg, count(1) from kehujingyingbudb.ml_xy_eg_m  group by flag_eg
20220706-16:16:45      dis_train_total: {'count': 68000, 'Pcount': 8036, 'prop': 0.118}



20220706-16:17:20  ---- 建表语句（限定202010账期当月目标用户）：
                       drop table if exists kehujingyingbudb.mid_eg_model_train_202010;
                       select pg_sleep(5);
                       create  table kehujingyingbudb.mid_eg_model_train_202010 as 
                       select acct_month, user_id, flag_eg ,row_number() over(order by acct_month desc, random()) rnself 
                       from kehujingyingbudb.ml_xy_eg_m
                       where acct_month>=202008 and acct_month<=202010 and user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3 and
                           dayvalue_gprs_flow>0
                        and flag_eg is not null;


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-103-c3705d254188>", line 1, in <module>
    nfo.Pcumsum_limit
NameError: name 'nfo' is not defined
                   Out[104]: 20220706-16:17:54  2

                   ###################################################################### 探索模型宽表
                    
20220706-16:49:33  开始时间：2022-07-06 16:49:33
20220706-16:49:33  参数设置：
                       Info.r_limit: 0.95
                       Info.iv_limit: 0.05
                       step: train
                       Info.auto_pair2: False
                       Info.model_name: 模型示例
                       stage: explore
                       table_in: kehujingyingbudb.mid_eg_recent_train_202010

20220706-16:49:33  field_base: 92行

20220706-16:49:33  删除7个available_notzd“不可用”字段：['cred_type', 'called_dura', 'days_roam', 'dayvalue_calling_dura', 'dayvalue_gprs_flow', 'dayvalue_user_status', 'dayvalue_phone_no_null']
20220706-16:49:33  field_base: 85行

20220706-16:49:33  删除1个基于“不可用”字段加工的手动衍生_py字段：
                        field_name                 formula
                   54  days_roam_p  days_roam / days_month
20220706-16:49:33  field_base: 84行
20220706-16:49:33  ------------------------- 读取数据: kehujingyingbudb.mid_eg_recent_train_202010 2022-07-06 16:49:33 -------------------------
20220706-16:49:33      src: gp
20220706-16:49:33      condition: data_use='data_train'
20220706-16:49:33      col_need(71): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2', 'innet_date', 'last_stop_date', 'phone_no_null', 'phone_no_tm', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220706-16:49:33      col_del: None
20220706-16:49:33      col_char(22): ['acct_month', 'phone_no_null', 'phone_no_tm', 'user_id', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220706-16:49:33      col_num(45): ['innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2']
20220706-16:49:33      col_date(2): ['innet_date', 'last_stop_date']
20220706-16:49:33      nrows: None
20220706-16:49:33      if_coltolower: True
20220706-16:49:33      kwargs: {}

20220706-16:49:33      读取
20220706-16:49:36      shape: (9000, 71)

20220706-16:49:36  将score_flag_eg2字段类型(object): .astype(float)
20220706-16:49:36  -------------------------读取完毕: (9000, 71) 2022-07-06 16:49:36 -------------------------

20220706-16:49:36  手动衍生_py12个字段: {'monthsaready_last_stop_date': '最后停机时间：已发生时长', 'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_gprs_p': '上网天数占比', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好', 'paste_dinner_innet_months': '主套餐、入网时长：交叉', 'ago_score_flag_eg': '模型示例的分数(历史)', 'ago_score_flag_eg2': '模型示例2的分数(历史)'}
20220706-16:49:36  monthsaready_last_stop_date: current_date - last_stop_date
20220706-16:49:36  monthsremain_last_stop_date: last_stop_date - current_date
20220706-16:49:37  days_gprs_p: days_gprs / days_month
20220706-16:49:37  days_call_p: days_call / days_month
20220706-16:49:37  days_call_p_1: days_call_p + days_gprs
20220706-16:49:37  days_call_p_2: days_call_p_1 + days_gprs
20220706-16:49:37  days_call_p_3: days_call_p_2 + days_gprs
20220706-16:49:37  days_call_p_4: days_call_p_3 + days_gprs
20220706-16:49:37  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220706-16:49:38  paste_dinner_innet_months: (dinner, innet_months)
20220706-16:49:42  ago_score_flag_eg: {'notago_tovalue': 1}
20220706-16:49:42  ago_score_flag_eg2: {'notago_tovalue': 1}
20220706-16:49:42  数据量: (9000, 83)

20220706-16:49:42  检查数据
20220706-16:49:42  各账期数据量分布：
                       202008  data_train    3000
                       202009  data_train    3000
                       202010  data_train    3000
                       dtype: int64
20220706-16:49:42  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！

20220706-16:49:42  字段类型分布: 
                       float64    49
                       object    26
                       int64    6
                       datetime64[ns]    2
                       dtype: int64


20220706-16:49:48  填充数值型&类别型字段缺失值
20220706-16:49:48  日期型字段缺失值情况：
                       innet_date    0
                       last_stop_date    0
                       dtype: int64

20220706-16:49:48  正负例分布：
                       data_train  202010  0    2000
                       data_train  202010  1    1000
                       dtype: int64

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220706-16:49:48  新数据newdata的shape：(3000, 77)
20220706-16:49:48  数据转换
20220706-16:49:57  转换后shape：(3000, 27)
20220706-16:49:57  从流水线中获取WoeTransformer_DF
20220706-16:49:57  首个数据集，直接返回woe编码结果
20220706-16:49:57  筛选衍生字段的 原始/手动衍生_sql 字段
20220706-16:49:57  数值型字段：有效字段24个，其中当月自动衍生字段23个，近n月自动衍生字段23个
20220706-16:49:57  类别型字段：有效字段3个（强制加入0个）:
20220706-16:49:57      当月自动衍生_py字段3个: ['sex_add~男', 'if_nolimit~是', 'if_5g_dinner~是']
20220706-16:49:57      近n月自动衍生_py字段3个: ['sex_add~男', 'if_nolimit~是', 'if_5g_dinner~是']

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220706-16:49:57  字段个数：23, 添加字段：['flag_eg']
20220706-16:49:57  新数据newdata的shape：(3000, 24)
20220706-16:49:57  数据转换
20220706-16:50:03  转换后shape：(3000, 23)
20220706-16:50:03  从流水线中获取WoeTransformer_DF
20220706-16:50:04  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有3对
20220706-16:50:04      从中二者中剔除字段3个字段:['avg__age_add', 'dinner_fee', 'gprs_resource']
20220706-16:50:04      其中待新增中剔除1个
20220706-16:50:04      其中原宽表中剔除2个

20220706-16:50:04  已有宽表shape：(3000, 27)
20220706-16:50:04  向宽表中加入字段（22个）：['avg__gprs_flow_5g', 'avg__gprs_flow_music', 'avg__dinner_fee', 'avg__calling_diff_dura', 'avg__call_dura_roam', 'avg__calling_diff_cnt', 'avg__gprs_flow_commu', 'avg__gprs_now_rest', 'avg__call_use', 'avg__calling_dura', 'avg__calling_cnt', 'avg__gprs_last_defer', 'avg__nos_calling', 'avg__gprs_flow_video', 'avg__gprs_flow_roam', 'avg__arpu', 'avg__nos_calling_diff', 'avg__gprs_flow_busy', 'avg__gprs_now_defer', 'avg__gprs_resource', 'avg__gprs_flow_game', 'avg__gprs_flow_short']
20220706-16:50:04  从宽表中删除字段（2个）：['gprs_resource', 'dinner_fee']
20220706-16:50:04  目前宽表shape：(3000, 47)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220706-16:50:04  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:04  新数据newdata的shape：(3000, 24)
20220706-16:50:04  数据转换
20220706-16:50:09  转换后shape：(3000, 12)
20220706-16:50:09  从流水线中获取WoeTransformer_DF
20220706-16:50:10  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有1对
20220706-16:50:10      从中二者中剔除字段1个字段:['sep__gprs_flow_game']
20220706-16:50:10      其中待新增中剔除1个
20220706-16:50:10      其中原宽表中剔除0个

20220706-16:50:10  已有宽表shape：(3000, 47)
20220706-16:50:10  向宽表中加入字段（11个）：['sep__gprs_now_rest', 'sep__gprs_resource', 'sep__calling_diff_dura', 'sep__calling_diff_cnt', 'sep__nos_calling', 'sep__gprs_flow_music', 'sep__nos_calling_diff', 'sep__gprs_flow_commu', 'sep__gprs_flow_5g', 'sep__gprs_flow_video', 'sep__gprs_flow_short']
20220706-16:50:10  从宽表中删除字段（0个）：[]
20220706-16:50:10  目前宽表shape：(3000, 58)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220706-16:50:10  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:10  新数据newdata的shape：(3000, 24)
20220706-16:50:10  数据转换
20220706-16:50:15  转换后shape：(3000, 9)
20220706-16:50:15  从流水线中获取WoeTransformer_DF
20220706-16:50:16  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有5对
20220706-16:50:16      从中二者中剔除字段5个字段:['wave__gprs_resource', 'sep__gprs_flow_music', 'sep__gprs_flow_short', 'wave__gprs_flow_video', 'wave__gprs_flow_game']
20220706-16:50:16      其中待新增中剔除3个
20220706-16:50:16      其中原宽表中剔除2个

20220706-16:50:16  已有宽表shape：(3000, 58)
20220706-16:50:16  向宽表中加入字段（6个）：['wave__gprs_flow_music', 'wave__gprs_flow_short', 'wave__gprs_now_defer', 'wave__gprs_last_defer', 'wave__gprs_now_rest', 'wave__gprs_flow_commu']
20220706-16:50:16  从宽表中删除字段（2个）：['sep__gprs_flow_short', 'sep__gprs_flow_music']
20220706-16:50:16  目前宽表shape：(3000, 62)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220706-16:50:16  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:17  新数据newdata的shape：(3000, 24)
20220706-16:50:17  数据转换
20220706-16:50:22  转换后shape：(3000, 19)
20220706-16:50:22  从流水线中获取WoeTransformer_DF
20220706-16:50:22  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有8对
20220706-16:50:22      从中二者中剔除字段8个字段:['grow__calling_diff_cnt', 'grow__gprs_flow_game', 'grow__calling_diff_dura', 'grow__call_use', 'grow__gprs_flow_music', 'grow__nos_calling_diff', 'call_dura_roam', 'grow__gprs_now_defer']
20220706-16:50:22      其中待新增中剔除7个
20220706-16:50:22      其中原宽表中剔除1个

20220706-16:50:22  已有宽表shape：(3000, 62)
20220706-16:50:22  向宽表中加入字段（12个）：['grow__gprs_flow_commu', 'grow__gprs_flow_video', 'grow__gprs_resource', 'grow__arpu', 'grow__gprs_flow_5g', 'grow__nos_calling', 'grow__gprs_flow_short', 'grow__gprs_now_rest', 'grow__dinner_fee', 'grow__gprs_last_defer', 'grow__call_dura_roam', 'grow__gprs_flow_busy']
20220706-16:50:22  从宽表中删除字段（1个）：['call_dura_roam']
20220706-16:50:22  目前宽表shape：(3000, 73)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220706-16:50:22  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:22  新数据newdata的shape：(3000, 24)
20220706-16:50:22  数据转换
20220706-16:50:28  转换后shape：(3000, 23)
20220706-16:50:28  从流水线中获取WoeTransformer_DF
20220706-16:50:32  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有7对
20220706-16:50:32      从中二者中剔除字段6个字段:['max__gprs_flow_music', 'max__gprs_flow_game', 'age_add', 'max__dinner_fee', 'max__gprs_flow_short', 'max__gprs_now_defer']
20220706-16:50:32      其中待新增中剔除5个
20220706-16:50:32      其中原宽表中剔除1个

20220706-16:50:32  已有宽表shape：(3000, 73)
20220706-16:50:32  向宽表中加入字段（18个）：['max__age_add', 'max__gprs_resource', 'max__arpu', 'max__gprs_flow_5g', 'max__call_dura_roam', 'max__calling_cnt', 'max__nos_calling_diff', 'max__calling_diff_cnt', 'max__gprs_flow_busy', 'max__calling_diff_dura', 'max__gprs_flow_commu', 'max__gprs_flow_video', 'max__gprs_now_rest', 'max__calling_dura', 'max__gprs_last_defer', 'max__call_use', 'max__gprs_flow_roam', 'max__nos_calling']
20220706-16:50:32  从宽表中删除字段（1个）：['age_add']
20220706-16:50:32  目前宽表shape：(3000, 90)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220706-16:50:32  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:32  新数据newdata的shape：(3000, 24)
20220706-16:50:32  数据转换
20220706-16:50:37  转换后shape：(3000, 21)
20220706-16:50:37  从流水线中获取WoeTransformer_DF
20220706-16:50:40  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有3对
20220706-16:50:40      从中二者中剔除字段3个字段:['min__age_add', 'avg__dinner_fee', 'gprs_now_defer']
20220706-16:50:40      其中待新增中剔除1个
20220706-16:50:40      其中原宽表中剔除2个

20220706-16:50:40  已有宽表shape：(3000, 90)
20220706-16:50:40  向宽表中加入字段（20个）：['min__calling_diff_cnt', 'min__gprs_flow_commu', 'min__calling_dura', 'min__gprs_resource', 'min__gprs_flow_video', 'min__gprs_last_defer', 'min__gprs_flow_music', 'min__calling_cnt', 'min__gprs_now_defer', 'min__calling_diff_dura', 'min__gprs_now_rest', 'min__gprs_flow_short', 'min__gprs_flow_busy', 'min__nos_calling', 'min__arpu', 'min__nos_calling_diff', 'min__call_use', 'min__gprs_flow_roam', 'min__gprs_flow_game', 'min__dinner_fee']
20220706-16:50:40  从宽表中删除字段（2个）：['gprs_now_defer', 'avg__dinner_fee']
20220706-16:50:40  目前宽表shape：(3000, 108)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220706-16:50:40  字段个数：23, 添加字段：['flag_eg']
20220706-16:50:41  新数据newdata的shape：(3000, 24)
20220706-16:50:41  数据转换
20220706-16:50:46  转换后shape：(3000, 19)
20220706-16:50:46  从流水线中获取WoeTransformer_DF
20220706-16:50:50  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有5对
20220706-16:50:50      从中二者中剔除字段5个字段:['std__gprs_flow_game', 'avg__gprs_flow_music', 'std__gprs_flow_video', 'std__gprs_flow_5g', 'std__gprs_flow_roam']
20220706-16:50:50      其中待新增中剔除4个
20220706-16:50:50      其中原宽表中剔除1个

20220706-16:50:50  已有宽表shape：(3000, 108)
20220706-16:50:50  向宽表中加入字段（15个）：['std__gprs_last_defer', 'std__gprs_flow_music', 'std__calling_dura', 'std__calling_diff_dura', 'std__call_use', 'std__gprs_flow_commu', 'std__call_dura_roam', 'std__gprs_flow_short', 'std__gprs_now_rest', 'std__nos_calling', 'std__calling_diff_cnt', 'std__gprs_flow_busy', 'std__gprs_resource', 'std__nos_calling_diff', 'std__calling_cnt']
20220706-16:50:50  从宽表中删除字段（1个）：['avg__gprs_flow_music']
20220706-16:50:50  目前宽表shape：(3000, 122)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220706-16:50:50  ('more0cnt', '近3月大于0的月份数')
20220706-16:50:50  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220706-16:50:50  新数据newdata的shape：(3000, 47)
20220706-16:50:50  数据转换
20220706-16:50:56  转换后shape：(3000, 16)
20220706-16:50:56  从流水线中获取WoeTransformer_DF
20220706-16:50:57  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有2对
20220706-16:50:57      从中二者中剔除字段2个字段:['moreq25cnt__gprs_now_defer', 'moreq25cnt__gprs_flow_music']
20220706-16:50:57      其中待新增中剔除2个
20220706-16:50:57      其中原宽表中剔除0个

20220706-16:50:57  已有宽表shape：(3000, 122)
20220706-16:50:57  向宽表中加入字段（14个）：['moreq25cnt__nos_calling_diff', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_last_defer', 'more0cnt__nos_calling', 'moreq25cnt__nos_calling', 'moreq25cnt__gprs_flow_game', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__arpu', 'moreq25cnt__gprs_flow_busy', 'moreq25cnt__gprs_resource', 'moreq25cnt__calling_dura', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__gprs_flow_short']
20220706-16:50:57  从宽表中删除字段（0个）：[]
20220706-16:50:57  目前宽表shape：(3000, 136)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220706-16:50:57  字段个数：3, 添加字段：['flag_eg']
20220706-16:50:57  新数据newdata的shape：(3000, 4)
20220706-16:50:57  数据转换
20220706-16:51:00  转换后shape：(3000, 3)
20220706-16:51:00  从流水线中获取WoeTransformer_DF
20220706-16:51:01  待新增字段与原宽表字段 相关性系数大于Info.r_limit（0.95）的字段对有2对
20220706-16:51:01      从中二者中剔除字段2个字段:['valuecnt__sex_add~男', 'if_nolimit~是']
20220706-16:51:01      其中待新增中剔除1个
20220706-16:51:01      其中原宽表中剔除1个

20220706-16:51:01  已有宽表shape：(3000, 136)
20220706-16:51:01  向宽表中加入字段（2个）：['valuecnt__if_5g_dinner~是', 'valuecnt__if_nolimit~是']
20220706-16:51:01  从宽表中删除字段（1个）：['if_nolimit~是']
20220706-16:51:01  目前宽表shape：(3000, 137)

                   ----------------------------------------- 汇总最终宽表 
20220706-16:51:01  计算字段之间的相关性系数
20220706-16:51:01  
                       count    9316.0
                       mean    0.278
                       std    0.181
                       min    0.0
                       25%    0.156
                       50%    0.228
                       75%    0.351
                       max    0.95
                       dtype: float64

20220706-16:51:01  iv分布：
                       count    137.0
                       mean    0.187
                       std    0.15
                       min    0.051
                       25%    0.068
                       50%    0.103
                       75%    0.314
                       max    0.7
                       dtype: float64

20220706-16:51:01  woe_accum(累计)概览：                                value    0    1       woe  weight  woe_weight  ALL
                       gprs_flow        (2253146.0, inf]  208  395  1.334495  0.2910    0.388338  603
                       gprs_flow_4g     (2253136.5, inf]  208  395  1.334495  0.2910    0.388338  603
                       gprs_flow_busy   (2253146.0, inf]  208  395  1.334495  0.2910    0.388338  603
                       gprs_flow_short        (5.5, inf]  178  325  1.295189  0.2360    0.305665  503
                       gprs_flow_commu       (22.5, inf]  193  349  1.285529  0.2525    0.324596  542

20220706-16:51:01  最终宽表字段列表col_all:
20220706-16:51:01      len(col_all): 137
20220706-16:51:01      补充4个的字段（must_remain=是）：{'user_status', 'greatest_gprs_app', 'account_id', 'days_call_p_4'}
20220706-16:51:01      len(col_all): 141
20220706-16:51:01      补充账期、数据集名称、用户标识等，目标字段(Info.col_mark、Info.col_target)
20220706-16:51:01      len(col_all): 146

20220706-16:51:01      补充5个的字段（col_mark、col_target、condition、dict_sortscore、col_out）：{'call_fee_local', 'sms_cnt', 'phone_no_null', 'last_stop_date', 'dayvalue_gprs_flow'}
20220706-16:51:01      len(col_all): 151
20220706-16:51:01  整理宽表数据字典
                   宽表数据字典概览 (151, 16):
                        是否宽表字段       field_name         comment dtype_db dtype_classify     field_src                                       table available available_notzd available_zd  \
                                  是  user_acct_month  观察期最后账期      NaN         类别型  手动衍生_sql                                         NaN       NaN             NaN          NaN   
                                  是         data_use      数据集名称      NaN         类别型  手动衍生_sql                                         NaN       NaN             NaN          NaN   
                                  是       acct_month            账期   bigint         类别型  手动衍生_sql  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                                  是    phone_no_null        手机号码  numeric         类别型          原始  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                                  是          user_id        手机号id     text         类别型          原始  kehujingyingbudb.ml_feature_info_yw_user_m       NaN             NaN          NaN   
                   
                        formula          remark must_remain into_model is_cause        base_init  
                            NaN             NaN         NaN        NaN      NaN  user_acct_month  
                            NaN             NaN         NaN        NaN      NaN         data_use  
                            NaN             NaN         NaN        NaN       否       acct_month  
                            NaN  不参与自动衍生         NaN       删除       否    phone_no_null  
                            NaN             NaN         NaN        NaN       否          user_id  

20220706-16:51:01  保存Info至：./binaryclassify/eg/traintest~202010~202012/Info~tabexp.pkl
20220706-16:51:01  结束时间：2022-07-06 16:51:01
20220706-16:51:01  耗时：87 s


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: Pipeline_DF：verbose参数值被赋予print_indent后默认参数设置为None
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: FeatureUnion_DF：verbose参数值被赋予print_indent后默认参数设置为None
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: opera_pair_fun paste时存在非类别型字段，请确认: ['innet_months']
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: field_base中未包括下列字段，但实际数据 多出：{'user_acct_month', 'data_use'}
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: field_base中未规定下列字段数据类型，请确认默认类型是否正确：{'user_acct_month': 'object', 'data_use': 'object'}
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:     FeaturePrefilter_DF unique_limit(5000)小于X行数(3000), 添加unique_limit_actual：len(X)*0.99=2970
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:     NumStrSpliter 数据中未出现非数值型字段！
  convert=self.convert_dtype,
20220706-16:54:02  开始时间：2022-07-06 16:54:02
20220706-16:54:13  参数设置：
                       Info.r_limit: 0.95
                       Info.iv_limit: 0.05
                       step: train
                       Info.auto_pair2: False
                       Info.model_name: 模型示例
                       stage: explore
                       table_in: kehujingyingbudb.mid_eg_recent_train_202010

                   Out[113]: 20220706-16:54:25  True
20220706-16:54:28  field_base: 92行

20220706-16:54:34  删除7个available_notzd“不可用”字段：['cred_type', 'called_dura', 'days_roam', 'dayvalue_calling_dura', 'dayvalue_gprs_flow', 'dayvalue_user_status', 'dayvalue_phone_no_null']
20220706-16:54:34  field_base: 85行

20220706-16:54:34  删除1个基于“不可用”字段加工的手动衍生_py字段：
                        field_name                 formula
                   54  days_roam_p  days_roam / days_month
20220706-16:54:34  field_base: 84行
                   Out[121]: 
                                        field_name                   comment dtype_db dtype_classify    field_src   table available available_notzd available_zd  \
                   14  monthsaready_last_stop_date  最后停机时间：已发生时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   15  monthsremain_last_stop_date    最后停机时间：剩余时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   60                  days_gprs_p              上网天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   62                  days_call_p              通话天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   63                days_call_p_1            通话天数占比_1  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   64                days_call_p_2            通话天数占比_2  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   65                days_call_p_3            通话天数占比_3  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   66                days_call_p_4            通话天数占比_4  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   81            greatest_gprs_app                   app偏好     text         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   82    paste_dinner_innet_months    主套餐、入网时长：交叉  numeric         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   91            ago_score_flag_eg      模型示例的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   93           ago_score_flag_eg2     模型示例2的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   
                                                                 formula remark must_remain into_model is_cause  
                   14                      current_date - last_stop_date    NaN         NaN        NaN      NaN  
                   15                      last_stop_date - current_date    NaN         NaN        NaN      NaN  
                   60                             days_gprs / days_month    NaN         NaN        NaN      NaN  
                   62                             days_call / days_month    NaN         NaN        NaN      NaN  
                   63                            days_call_p + days_gprs    NaN         NaN        NaN      NaN  
                   64                          days_call_p_1 + days_gprs    NaN         NaN        NaN      NaN  
                   65                          days_call_p_2 + days_gprs    NaN         NaN        NaN      NaN  
                   66                          days_call_p_3 + days_gprs    NaN          是        NaN      NaN  
                   81  {'gprs_flow_video': 'video', 'gprs_flow_short'...    NaN          是        NaN      NaN  
                   82                             (dinner, innet_months)    NaN         NaN        NaN      NaN  
                   91                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  
                   93                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  


D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\dataprep.py:9: UserWarning: Pipeline_DF：verbose参数值被赋予print_indent后默认参数设置为None
  import time


D:\工作\模型脚本\ModelProject\selfmodule\toolmodule\dataprep.py:9: UserWarning: FeatureUnion_DF：verbose参数值被赋予print_indent后默认参数设置为None
  import time
                   Out[124]: 20220706-16:55:20  False
                   Out[125]: 20220706-16:55:33  True
20220706-16:56:28  ------------------------- 读取数据: kehujingyingbudb.mid_eg_recent_train_202010 2022-07-06 16:56:28 -------------------------
20220706-16:56:28      src: gp
20220706-16:56:28      condition: data_use='data_train'
20220706-16:56:28      col_need(71): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2', 'innet_date', 'last_stop_date', 'phone_no_null', 'phone_no_tm', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220706-16:56:28      col_del: None
20220706-16:56:28      col_char(22): ['acct_month', 'phone_no_null', 'phone_no_tm', 'user_id', 'dinner_id', 'account_id', 'sex', 'sex_add', 'user_status', 'dinner', 'if_nolimit', 'if_5g_dinner', 'if_5g_term', 'if_jt', 'start_level', 'if_cred_multi', 'term_model', 'term_brand', 'term_type', 'sk_type', 'if_new_term', 'flag_eg']
20220706-16:56:28      col_num(45): ['innet_months', 'age', 'age_add', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'pay_cnt', 'pay_fee', 'acct_balance', 'calling_cnt', 'calling_dura', 'called_cnt', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_busy', 'gprs_flow_idle', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'gprs_flow_gat', 'days_gat', 'days_gprs', 'days_call', 'nos_call', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'call_fee_roam', 'gprs_income', 'gprs_fee', 'call_fee', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'score_flag_eg', 'score_flag_eg2']
20220706-16:56:28      col_date(2): ['innet_date', 'last_stop_date']
20220706-16:56:28      nrows: None
20220706-16:56:28      if_coltolower: True
20220706-16:56:28      kwargs: {}

20220706-16:56:28      读取
20220706-16:56:31      shape: (9000, 71)

20220706-16:56:31  将score_flag_eg2字段类型(object): .astype(float)
20220706-16:56:31  -------------------------读取完毕: (9000, 71) 2022-07-06 16:56:31 -------------------------

                   Out[130]: 20220706-16:56:38  'kehujingyingbudb.mid_eg_recent_train_202010'
                   Out[135]: 20220706-16:57:08  True
                   Out[138]: 20220706-16:57:16  False
20220706-16:57:22  手动衍生_py12个字段: {'monthsaready_last_stop_date': '最后停机时间：已发生时长', 'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_gprs_p': '上网天数占比', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好', 'paste_dinner_innet_months': '主套餐、入网时长：交叉', 'ago_score_flag_eg': '模型示例的分数(历史)', 'ago_score_flag_eg2': '模型示例2的分数(历史)'}
20220706-16:57:22  monthsaready_last_stop_date: current_date - last_stop_date
20220706-16:57:22  monthsremain_last_stop_date: last_stop_date - current_date
20220706-16:57:22  days_gprs_p: days_gprs / days_month
20220706-16:57:22  days_call_p: days_call / days_month
20220706-16:57:22  days_call_p_1: days_call_p + days_gprs
20220706-16:57:22  days_call_p_2: days_call_p_1 + days_gprs
20220706-16:57:22  days_call_p_3: days_call_p_2 + days_gprs
20220706-16:57:22  days_call_p_4: days_call_p_3 + days_gprs
20220706-16:57:23  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220706-16:57:24  paste_dinner_innet_months: (dinner, innet_months)


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:1025: UserWarning: opera_pair_fun paste时存在非类别型字段，请确认: ['innet_months']
  warnings.warn(s); time.sleep(seconds)
20220706-16:57:27  ago_score_flag_eg: {'notago_tovalue': 1}
20220706-16:57:27  ago_score_flag_eg2: {'notago_tovalue': 1}


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3213, in run_ast_nodes
    code = compiler(mod, cell_name, "exec")
  File "D:\Python for Windows\lib\codeop.py", line 133, in __call__
    codeob = compile(source, filename, symbol, self.flags, 1)
  File "<ipython-input-140-a72df79787c2>", line 2
SyntaxError: 'return' outside function


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-142-181dcd86c9d6>", line 1, in <module>
    if_compute
NameError: name 'if_compute' is not defined
20220706-17:05:13  手动衍生_py12个字段: {'monthsaready_last_stop_date': '最后停机时间：已发生时长', 'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'days_gprs_p': '上网天数占比', 'days_call_p': '通话天数占比', 'days_call_p_1': '通话天数占比_1', 'days_call_p_2': '通话天数占比_2', 'days_call_p_3': '通话天数占比_3', 'days_call_p_4': '通话天数占比_4', 'greatest_gprs_app': 'app偏好', 'paste_dinner_innet_months': '主套餐、入网时长：交叉', 'ago_score_flag_eg': '模型示例的分数(历史)', 'ago_score_flag_eg2': '模型示例2的分数(历史)'}
                   Out[144]: 20220706-17:05:19  
                   14                        current_date - last_stop_date
                   15                        last_stop_date - current_date
                   60                               days_gprs / days_month
                   62                               days_call / days_month
                   63                              days_call_p + days_gprs
                   64                            days_call_p_1 + days_gprs
                   65                            days_call_p_2 + days_gprs
                   66                            days_call_p_3 + days_gprs
                   81    {'gprs_flow_video': 'video', 'gprs_flow_short'...
                   82                               (dinner, innet_months)
                   91                                {'notago_tovalue': 1}
                   93                                {'notago_tovalue': 1}
                   Name: formula, dtype: object
                   Out[147]: 20220706-17:06:02  True
                   Out[148]: 20220706-17:06:14  
                   14                        current_date - last_stop_date
                   15                        last_stop_date - current_date
                   60                               days_gprs / days_month
                   62                               days_call / days_month
                   63                              days_call_p + days_gprs
                   64                            days_call_p_1 + days_gprs
                   65                            days_call_p_2 + days_gprs
                   66                            days_call_p_3 + days_gprs
                   81    {'gprs_flow_video': 'video', 'gprs_flow_short'...
                   82                               (dinner, innet_months)
                   91                                {'notago_tovalue': 1}
                   93                                {'notago_tovalue': 1}
                   Name: formula, dtype: object


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-149-1cc6be056696>", line 1, in <module>
    print(f"{field_name_i}: {formula_i}")
NameError: name 'field_name_i' is not defined
                   Out[150]: 20220706-17:12:01  range(0, 12)
                   Out[153]: 20220706-17:12:33  'greatest_gprs_app'
                   Out[154]: 20220706-17:12:39  "{'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}"
20220706-17:12:44  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
                   Out[156]: 20220706-17:13:04  False
                   Out[158]: 20220706-17:16:00  
                   {'greatest_gprs_app': {'gprs_flow_video': 'video',
                     'gprs_flow_short': 'short',
                     'gprs_flow_music': 'music',
                     'gprs_flow_commu': 'commu',
                     'gprs_flow_game': 'game'}}
                   Out[159]: 20220706-17:16:18  'greatest_gprs_app'
                   Out[160]: 20220706-17:16:32  
                        greatest_gprs_app
                   0                video
                   1                video
                   2                video
                   3                video
                   4                video
                   ...                ...
                   8995             commu
                   8996             video
                   8997             video
                   8998             video
                   8999             video
                   
                   [9000 rows x 1 columns]


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-161-88f61cd56bac>", line 1, in <module>
    if if_compute:
NameError: name 'if_compute' is not defined
                   Out[163]: 20220706-17:17:17  {}
                   Out[165]: 20220706-17:17:24  
                   {'greatest_gprs_app': ['gprs_flow_video',
                     'gprs_flow_short',
                     'gprs_flow_music',
                     'gprs_flow_commu',
                     'gprs_flow_game']}
                   Out[166]: 
                                        field_name                   comment dtype_db dtype_classify    field_src   table available available_notzd available_zd  \
                   14  monthsaready_last_stop_date  最后停机时间：已发生时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   15  monthsremain_last_stop_date    最后停机时间：剩余时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   60                  days_gprs_p              上网天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   62                  days_call_p              通话天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   63                days_call_p_1            通话天数占比_1  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   64                days_call_p_2            通话天数占比_2  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   65                days_call_p_3            通话天数占比_3  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   66                days_call_p_4            通话天数占比_4  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   81            greatest_gprs_app                   app偏好     text         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   82    paste_dinner_innet_months    主套餐、入网时长：交叉  numeric         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   91            ago_score_flag_eg      模型示例的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   93           ago_score_flag_eg2     模型示例2的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   
                                                                 formula remark must_remain into_model is_cause  
                   14                      current_date - last_stop_date    NaN         NaN        NaN      NaN  
                   15                      last_stop_date - current_date    NaN         NaN        NaN      NaN  
                   60                             days_gprs / days_month    NaN         NaN        NaN      NaN  
                   62                             days_call / days_month    NaN         NaN        NaN      NaN  
                   63                            days_call_p + days_gprs    NaN         NaN        NaN      NaN  
                   64                          days_call_p_1 + days_gprs    NaN         NaN        NaN      NaN  
                   65                          days_call_p_2 + days_gprs    NaN         NaN        NaN      NaN  
                   66                          days_call_p_3 + days_gprs    NaN          是        NaN      NaN  
                   81  {'gprs_flow_video': 'video', 'gprs_flow_short'...    NaN          是        NaN      NaN  
                   82                             (dinner, innet_months)    NaN         NaN        NaN      NaN  
                   91                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  
                   93                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  


Traceback (most recent call last):
  File "D:\Python for Windows\lib\site-packages\IPython\core\interactiveshell.py", line 3296, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-169-3fab15101ebe>", line 1, in <module>
    if if_compute:
NameError: name 'if_compute' is not defined
20220706-17:19:36  paste_dinner_innet_months: (dinner, innet_months)
                   Out[171]: 20220706-17:20:09  True
                   Out[173]: 20220706-17:20:16  [['dinner', 'innet_months']]
                   Out[174]: 20220706-17:20:37  '（|）|\\(|\\)| |\'|"|’|”'
                   Out[175]: 20220706-17:20:52  [['dinner', 'innet_months']]
                   Out[176]: 20220706-17:20:55  [['dinner', 'innet_months']]
                   Out[177]: 20220706-17:21:06  [['dinner,innet_months']]
                   Out[178]: 20220706-17:21:08  [['dinner,innet_months']]
                   Out[179]: 20220706-17:21:36  [['dinner', 'innet_months']]


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:1025: UserWarning: opera_pair_fun paste时存在非类别型字段，请确认: ['innet_months']
  warnings.warn(s); time.sleep(seconds)
                   Out[180]: 20220706-17:21:47  
                                  paste__dinner__innet_months
                   0     神州行畅听无忧计划10元套餐[策划]_219
                   1               神州行畅听卡4G基本策划_256
                   2               神州行畅听卡4G基本策划_123
                   3       神州行畅听卡4G飞享套餐升级版8档_77
                   4               神州行畅听卡4G基本策划_156
                   ...                                    ...
                   8995     神州行B标准资费基本策划[策划]_171
                   8996                  动感地带4G基本策划_7
                   8997                动感地带4G基本策划_126
                   8998                动感地带4G基本策划_164
                   8999             动感地带和4G套餐38套餐_57
                   
                   [9000 rows x 1 columns]
                   Out[181]: 20220706-17:22:12  'paste_dinner_innet_months'
                   Out[182]: 20220706-17:22:44  
                        user_acct_month    data_use acct_month      user_id  innet_months  age  age_add  dinner_fee  gprs_last_defer  gprs_resource  gprs_now_rest  call_use   arpu  pay_cnt  \
                   0             202010  data_train     202008  15796517629           219   66       66        10.0               40             10        81921.0       8.0  10.00        0   
                   1             202010  data_train     202008  24565836473           256   64       64         9.0                0        5253130        10247.0       1.0  11.00        0   
                   2             202010  data_train     202008  10064655787           123   30       30        18.0              100         204810     10690570.0      24.0  18.00        0   
                   3             202010  data_train     202008  17913749331            77   31       31         8.0               10       10506250     20991957.0       3.0  18.00        0   
                   4             202010  data_train     202008  11302028033           156   29       29        39.0             3072        6291466     16768842.0       1.0  40.00        0   
                   ...              ...         ...        ...          ...           ...  ...      ...         ...              ...            ...            ...       ...    ...      ...   
                   8995          202010  data_train     202010  78951651510           171   35       35         0.0                0             10       456750.0       NaN   6.15        2   
                   8996          202010  data_train     202010  78573110660             7   37       37         9.0                0             10            0.0       0.0   9.78        0   
                   8997          202010  data_train     202010  83343100611           126   31       31        18.0              100        1253386     11739145.0       0.0  45.00        0   
                   8998          202010  data_train     202010  76680325400           164   42       42         8.0                0             10            7.0      16.0   8.00        0   
                   8999          202010  data_train     202010  23777067604            57   25       25        38.0              300         614410     11098008.0       2.0  38.00        0   
                   
                         pay_fee  ...  flag_eg  monthsaready_last_stop_date  monthsremain_last_stop_date  days_gprs_p  days_call_p  days_call_p_1  days_call_p_2  days_call_p_3  days_call_p_4  \
                   0         0.0  ...     None                         51.0                        -51.0     0.903226     0.903226      28.903226      56.903226      84.903226     112.903226   
                   1         0.0  ...     None                         80.0                        -80.0     0.967742     0.419355      30.419355      60.419355      90.419355     120.419355   
                   2         0.0  ...     None                         11.0                        -11.0     0.967742     0.548387      30.548387      60.548387      90.548387     120.548387   
                   3         0.0  ...     None                         -1.0                          1.0     0.838710     0.290323      26.290323      52.290323      78.290323     104.290323   
                   4         0.0  ...     None                         -1.0                          1.0     0.967742     0.645161      30.645161      60.645161      90.645161     120.645161   
                   ...       ...  ...      ...                          ...                          ...          ...          ...            ...            ...            ...            ...   
                   8995     30.0  ...        0                         44.0                        -44.0     1.000000     0.387097      31.387097      62.387097      93.387097     124.387097   
                   8996      0.0  ...        0                          6.0                         -6.0     0.064516     0.161290       2.161290       4.161290       6.161290       8.161290   
                   8997      0.0  ...        0                         30.0                        -30.0     0.032258     0.451613       1.451613       2.451613       3.451613       4.451613   
                   8998      0.0  ...        0                         26.0                        -26.0     1.000000     0.774194      31.774194      62.774194      93.774194     124.774194   
                   8999      0.0  ...        0                         12.0                        -12.0     1.000000     0.516129      31.516129      62.516129      93.516129     124.516129   
                   
                         greatest_gprs_app             paste_dinner_innet_months  ago_score_flag_eg  ago_score_flag_eg2  days_month  current_date  
                   0                 video  神州行畅听无忧计划10元套餐[策划]_219             67.101                 0.0          31    2020-08-01  
                   1                 video            神州行畅听卡4G基本策划_256             19.925                 0.0          31    2020-08-01  
                   2                 video            神州行畅听卡4G基本策划_123             87.910                 0.0          31    2020-08-01  
                   3                 video    神州行畅听卡4G飞享套餐升级版8档_77             59.339                 0.0          31    2020-08-01  
                   4                 video            神州行畅听卡4G基本策划_156             92.798                 0.0          31    2020-08-01  
                   ...                 ...                                   ...                ...                 ...         ...           ...  
                   8995              commu     神州行B标准资费基本策划[策划]_171              1.000                 1.0          31    2020-10-01  
                   8996              video                  动感地带4G基本策划_7              1.000                 1.0          31    2020-10-01  
                   8997              video                动感地带4G基本策划_126              1.000                 1.0          31    2020-10-01  
                   8998              video                动感地带4G基本策划_164              1.000                 1.0          31    2020-10-01  
                   8999              video             动感地带和4G套餐38套餐_57              1.000                 1.0          31    2020-10-01  
                   
                   [9000 rows x 85 columns]
                   Out[183]: 20220706-17:22:49  [['dinner', 'innet_months']]
                   Out[184]: 20220706-17:23:31  
                                                   dinner  innet_months
                   0     神州行畅听无忧计划10元套餐[策划]           219
                   1               神州行畅听卡4G基本策划           256
                   2               神州行畅听卡4G基本策划           123
                   3      神州行畅听卡4G飞享套餐升级版8档            77
                   4               神州行畅听卡4G基本策划           156
                   ...                                ...           ...
                   8995     神州行B标准资费基本策划[策划]           171
                   8996                动感地带4G基本策划             7
                   8997                动感地带4G基本策划           126
                   8998                动感地带4G基本策划           164
                   8999            动感地带和4G套餐38套餐            57
                   
                   [9000 rows x 2 columns]


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:1025: UserWarning: opera_pair_fun paste时存在非类别型字段，请确认: ['innet_months']
  warnings.warn(s); time.sleep(seconds)
                   Out[187]: 
                                        field_name                   comment dtype_db dtype_classify    field_src   table available available_notzd available_zd  \
                   14  monthsaready_last_stop_date  最后停机时间：已发生时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   15  monthsremain_last_stop_date    最后停机时间：剩余时长  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   60                  days_gprs_p              上网天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   62                  days_call_p              通话天数占比  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   63                days_call_p_1            通话天数占比_1  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   64                days_call_p_2            通话天数占比_2  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   65                days_call_p_3            通话天数占比_3  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   66                days_call_p_4            通话天数占比_4  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   81            greatest_gprs_app                   app偏好     text         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   82    paste_dinner_innet_months    主套餐、入网时长：交叉  numeric         类别型  手动衍生_py  python       NaN             NaN          NaN   
                   91            ago_score_flag_eg      模型示例的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   93           ago_score_flag_eg2     模型示例2的分数(历史)  numeric         数值型  手动衍生_py  python       NaN             NaN          NaN   
                   
                                                                 formula remark must_remain into_model is_cause  
                   14                      current_date - last_stop_date    NaN         NaN        NaN      NaN  
                   15                      last_stop_date - current_date    NaN         NaN        NaN      NaN  
                   60                             days_gprs / days_month    NaN         NaN        NaN      NaN  
                   62                             days_call / days_month    NaN         NaN        NaN      NaN  
                   63                            days_call_p + days_gprs    NaN         NaN        NaN      NaN  
                   64                          days_call_p_1 + days_gprs    NaN         NaN        NaN      NaN  
                   65                          days_call_p_2 + days_gprs    NaN         NaN        NaN      NaN  
                   66                          days_call_p_3 + days_gprs    NaN          是        NaN      NaN  
                   81  {'gprs_flow_video': 'video', 'gprs_flow_short'...    NaN          是        NaN      NaN  
                   82                             (dinner, innet_months)    NaN         NaN        NaN      NaN  
                   91                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  
                   93                              {'notago_tovalue': 1}    NaN         NaN        NaN      NaN  
                   Out[190]: 20220706-17:24:54  'ago_score_flag_eg'
20220706-17:25:00  ago_score_flag_eg: {'notago_tovalue': 1}
                   Out[193]: 20220706-17:25:05  'score_flag_eg'
                   Out[195]: 20220706-17:25:23  '202010'
                   Out[197]: 20220706-17:25:31  
                   0       67.101
                   1       19.925
                   2       87.910
                   3       59.339
                   4       92.798
                            ...  
                   8995    50.683
                   8996    71.469
                   8997    55.180
                   8998    81.818
                   8999    13.308
                   Name: ago_score_flag_eg, Length: 9000, dtype: float64
                   Out[198]: 20220706-17:25:42  'score_flag_eg'
                   Out[199]: 20220706-17:27:12  '202010'
                   Out[200]: 20220706-17:27:17  'acct_month'
                   Out[201]: 20220706-17:27:33  "{'notago_tovalue': 1}"
                   Out[202]: 20220706-17:27:44  1
                   Out[203]: 20220706-17:28:30  ['score_flag_eg']
                   Out[204]: 20220706-17:28:33  ['score_flag_eg']
                   Out[205]: 20220706-17:28:42  
                   {'greatest_gprs_app': ['gprs_flow_video',
                     'gprs_flow_short',
                     'gprs_flow_music',
                     'gprs_flow_commu',
                     'gprs_flow_game'],
                    'paste_dinner_innet_months': ['dinner', 'innet_months']}
