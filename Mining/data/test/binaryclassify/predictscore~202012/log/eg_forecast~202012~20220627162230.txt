20220627-16:22:30  加载训练结果：./binaryclassify/eg/traintest~202010~202012/train_result~202010~202012.pkl
20220627-16:22:30  从训练结果中获取Info,并加入预测所需信息


                   ###################################################################### 加工预测账期近n月基础数据
                    
20220627-16:22:30  开始时间：2022-06-27 16:22:30
20220627-16:22:30  ---- month: 202012
20220627-16:22:30  ---- 参数设置：
                       ---- step: predict
                       ---- Info.model_name: 模型示例
                       ---- Info.n_recent: 3

                   ------------------------------------- 检查各前置表 --------------------------------------------------- 
20220627-16:22:30  检查 kehujingyingbudb.ml_xy_eg_m
20220627-16:22:30      78 列
20220627-16:22:31      202012账期： 15000行
20220627-16:22:31      202011账期： 10000行
20220627-16:22:31      202010账期： 15000行


20220627-16:22:31          dis_predict_total {'count':             count
                   acct_month       
                   202012      15000}
20220627-16:22:31  数据量：select  count(1) from kehujingyingbudb.ml_xy_eg_m where acct_month=202012 and user_status='在网-正常' and 
                       phone_no_null is null and
                       last_stop_date is not null and
                       innet_months >= 3 and
                       dayvalue_gprs_flow>0

20220627-16:22:31      dis_predict_model {'count': 10817}


                   ------------------- 关联近n月数据：kehujingyingbudb.mid_eg_recent_predict_202012 ------------------------------- 


20220627-16:22:31  ---- 关联近n月数据：
                       drop table if exists kehujingyingbudb.mid_eg_recent_predict_202012;
                       create  table kehujingyingbudb.mid_eg_recent_predict_202012 as
                       select user_acct_month, data_use, acct_month, phone_no_null, user_id, account_id, innet_months, sex_add, user_status, last_stop_date, dinner_fee, gprs_last_defer, gprs_resource, gprs_now_rest, call_use, if_nolimit, if_5g_dinner, arpu, calling_cnt, calling_dura, calling_diff_cnt, calling_diff_dura, gprs_flow_4g, gprs_flow_5g, gprs_now_defer, gprs_flow_roam, call_dura_roam, nos_calling, nos_calling_diff, sms_cnt, call_fee_local, gprs_flow_video, gprs_flow_short, gprs_flow_music, gprs_flow_commu, gprs_flow_game, dayvalue_gprs_flow 
                       from (
                       select a.user_acct_month, a.data_use, b.*
                       from (select acct_month user_acct_month, 'data_predict' data_use, * from kehujingyingbudb.ml_xy_eg_m where acct_month=202012 and user_status='在网-正常' and 
                           phone_no_null is null and
                           last_stop_date is not null and
                           innet_months >= 3 and
                           dayvalue_gprs_flow>0
                       ) a
                       inner join (select * from kehujingyingbudb.ml_xy_eg_m where acct_month>=202010 and acct_month<=202012) b on a.user_id = b.user_id
                       ) t;
20220627-16:22:32      sql执行完毕
20220627-16:22:32  统计kehujingyingbudb.mid_eg_recent_predict_202012行列数
20220627-16:22:32      28813行，37列

                   --------------------------------- 核验各账期数据量  ---------------------------------------------- 
20220627-16:22:32  sql语句：
                       select user_acct_month, data_use, acct_month, count(1) 
                       from kehujingyingbudb.mid_eg_recent_predict_202012 
                       group by user_acct_month, data_use, acct_month 
                       order by user_acct_month, data_use, acct_month

20220627-16:22:32  结果：
                      user_acct_month      data_use  acct_month  count
                   0           202012  data_predict      202010  10817
                   1           202012  data_predict      202011   7179
                   2           202012  data_predict      202012  10817


D:\工作\模型脚本\ModelProject\selfmodule\tablemodule\tablefun.py:900: UserWarning: 下列账期用户量不同，请检查！
                              acct_month  count
user_acct_month data_use                       
202012          data_predict      202010  10817
                data_predict      202011   7179
                data_predict      202012  10817
  warnings.warn(w); time.sleep(seconds)
20220627-16:22:35  
                   ---- 删除中间表
20220627-16:22:35  drop table if exists kehujingyingbudb.mid_eg_user_predict_202012;
20220627-16:22:35      sql执行完毕

20220627-16:22:35  ---- 返回结果表名：kehujingyingbudb.mid_eg_recent_predict_202012
20220627-16:22:35  ---- 将Info保存至./binaryclassify/eg/traintest~202010~202012/Info~base_predict.pkl

20220627-16:22:35  结束时间：2022-06-27 16:22:35
20220627-16:22:35  耗时：4 s


20220627-16:22:35  将数据拆分成 4 份分别预测

20220627-16:22:35  =========================================== 0份：['0', '1', '2'] ==========================================
20220627-16:22:35  修改Info，用于分批预测
20220627-16:22:35  condition: right(cast(user_id as text), 1) in ('0', '1', '2')
                   table_predict:./binaryclassify/eg//predictscore~202012/predict_data~202012~0.csv
                   table_score:./binaryclassify/eg//predictscore~202012/predict_score_data~202010~202012~202012~0.csv

                   ###################################################################### 预测集加工
                    
20220627-16:22:35  开始时间：2022-06-27 16:22:35
20220627-16:22:35  参数设置：
                       Info.model_name: 模型示例
                       Info.auto_pair2: False
                       Info.iv_limit: 0.05
                       stage: create
                       step: predict
                       Info.r_limit: 0.95
                       table_in: kehujingyingbudb.mid_eg_recent_predict_202012

20220627-16:22:38  ------------------------- 读取数据: kehujingyingbudb.mid_eg_recent_predict_202012 2022-06-27 16:22:38 -------------------------
20220627-16:22:38      src: gp
20220627-16:22:38      condition: right(cast(user_id as text), 1) in ('0', '1', '2')
20220627-16:22:38      col_need(34): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'innet_months', 'sex_add', 'last_stop_date', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'if_nolimit', 'if_5g_dinner', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220627-16:22:38      col_del: None
20220627-16:22:38      col_char(8): ['user_acct_month', 'data_use', 'acct_month', 'user_id', 'account_id', 'sex_add', 'if_nolimit', 'if_5g_dinner']
20220627-16:22:38      col_num(25): ['innet_months', 'dinner_fee', 'gprs_last_defer', 'gprs_resource', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_cnt', 'calling_diff_dura', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_now_defer', 'gprs_flow_roam', 'call_dura_roam', 'nos_calling', 'nos_calling_diff', 'sms_cnt', 'call_fee_local', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game']
20220627-16:22:38      col_date(1): ['last_stop_date']
20220627-16:22:38      nrows: None
20220627-16:22:38      if_coltolower: True
20220627-16:22:38      kwargs: {}

20220627-16:22:38      读取
20220627-16:22:40      shape: (8820, 34)

20220627-16:22:40  -------------------------读取完毕: (8820, 34) 2022-06-27 16:22:40 -------------------------

20220627-16:22:40  手动衍生_py2个字段: {'monthsremain_last_stop_date': '最后停机时间：剩余时长', 'greatest_gprs_app': 'app偏好'}
20220627-16:22:40  monthsremain_last_stop_date: last_stop_date - current_date
20220627-16:22:40  greatest_gprs_app: {'gprs_flow_video': 'video', 'gprs_flow_short': 'short', 'gprs_flow_music': 'music', 'gprs_flow_commu': 'commu', 'gprs_flow_game': 'game'}
20220627-16:22:42  数据量: (8820, 36)

20220627-16:22:42  检查数据
20220627-16:22:42  各账期数据量分布：
                       202010  data_predict    3310
                       202011  data_predict    2200
                       202012  data_predict    3310
                       dtype: int64
20220627-16:22:42  各账期数据量不一致
20220627-16:22:42  以nan填充缺少账期的记录
20220627-16:22:43      修改后：
                       202010  data_predict    3310
                       202011  data_predict    3310
                       202012  data_predict    3310
                       dtype: int64)
20220627-16:22:43  
                   diff_limitweiNone,不考察近n月字段各账期取值分布, dis_exam返回None！


20220627-16:22:43  填充数值型&类别型字段缺失值
20220627-16:22:43  日期型字段缺失值情况：
                       last_stop_date    1110
                       dtype: int64

                   ----------------------------------------- 当月 类别型 onthot 
20220627-16:22:43  ['sex_add~女', 'sex_add~男']

                   ----------------------------------------- 当月 数值型&类别型 原始数据 
20220627-16:22:43  (3310, 29)
20220627-16:22:43  筛选衍生字段的 原始/手动衍生_sql 字段

                   ----------------------------------------- 近n月 数值型 近3月均值 
20220627-16:22:43  字段个数：22, 添加字段：None
20220627-16:22:43  (3310, 51)

                   ----------------------------------------- 近n月 数值型 近3月离散系数 
20220627-16:22:43  字段个数：10, 添加字段：None
20220627-16:22:43  (3310, 61)

                   ----------------------------------------- 近n月 数值型 近3月波动性 
20220627-16:22:43  字段个数：12, 添加字段：None
20220627-16:22:43  (3310, 73)

                   ----------------------------------------- 近n月 数值型 近3月成长率 
20220627-16:22:43  字段个数：9, 添加字段：None
20220627-16:22:43  (3310, 82)

                   ----------------------------------------- 近n月 数值型 近3月最大值 
20220627-16:22:43  字段个数：17, 添加字段：None
20220627-16:22:43  (3310, 99)

                   ----------------------------------------- 近n月 数值型 近3月最小值 
20220627-16:22:43  字段个数：19, 添加字段：None
20220627-16:22:43  (3310, 118)

                   ----------------------------------------- 近n月 数值型 近3月标准差 
20220627-16:22:43  字段个数：14, 添加字段：None
20220627-16:22:43  (3310, 132)

                   ----------------------------------------- 近n月 数值型 大于x的月份数 
20220627-16:22:43  ('more0cnt', '近3月大于0的月份数')
20220627-16:22:43  ('moreq25cnt', '近3月大于第一四分位数的月份数')
20220627-16:22:43  (3310, 151)

                   ----------------------------------------- 近n月 类别型 取某值的月份数 
20220627-16:22:43  字段个数：2, 添加字段：None
20220627-16:22:43  (3310, 153)

                   ----------------------------------------- 汇总最终宽表 
20220627-16:22:43  table.shape:(3310, 153)

20220627-16:22:43  保存宽表结果至：./binaryclassify/eg//predictscore~202012/predict_data~202012~0.csv

20220627-16:22:43  计算字段之间的相关性系数
20220627-16:22:44  
                       count    10440.0
                       mean    0.161
                       std    0.189
                       min    0.0
                       25%    0.041
                       50%    0.095
                       75%    0.199
                       max    1.0
                       dtype: float64


                   ------------------------------- 计算宽表字段psi ------------------------------------ 
                    
                    20220627-16:22:44  my toolmodule.dataprep.PsiTransformer_DF transform
                    20220627-16:22:44      开始时间：2022-06-27 16:22:44
                    20220627-16:22:44      data in : (3310, 163)
                    20220627-16:22:44      self已带有id_X属性 2466191260808
                    20220627-16:22:44      首次从X获取id_X_new属性 2000887081560
                    20220627-16:22:44      data in2: (3310, 157)
                    20220627-16:22:44      对154个数值字段进行分箱：['innet_months', 'monthsremain_last_stop_date', 'gprs_last_defer', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_dura', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_roam', 'call_dura_roam', 'days_call_p_4', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_music', 'gprs_flow_commu', 'gprs_flow_game', 'sex_add~女', 'sex_add~男', 'avg__gprs_flow_roam', 'avg__monthsremain_last_stop_date', 'avg__gprs_last_defer', 'avg__gprs_resource', 'avg__calling_diff_dura', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__nos_calling', 'avg__nos_calling_diff', 'avg__arpu', 'avg__calling_cnt', 'avg__gprs_flow_commu', 'avg__gprs_now_defer', 'avg__call_use', 'avg__gprs_flow_4g', 'avg__gprs_now_rest', 'avg__gprs_flow_music', 'avg__calling_diff_cnt', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_flow_short', 'avg__calling_dura', 'sep__gprs_resource', 'sep__calling_diff_dura', 'sep__gprs_flow_5g', 'sep__nos_calling', 'sep__nos_calling_diff', 'sep__gprs_flow_commu', 'sep__gprs_now_rest', 'sep__calling_diff_cnt', 'sep__gprs_flow_short', 'sep__calling_dura', 'wave__monthsremain_last_stop_date', 'wave__gprs_last_defer', 'wave__gprs_flow_video', 'wave__calling_cnt', 'wave__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__call_use', 'wave__gprs_now_rest', 'wave__gprs_flow_music', 'wave__calling_diff_cnt', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__gprs_flow_roam', 'grow__gprs_last_defer', 'grow__gprs_resource', 'grow__calling_diff_dura', 'grow__gprs_flow_video', 'grow__dinner_fee', 'grow__gprs_flow_5g', 'grow__nos_calling', 'grow__nos_calling_diff', 'grow__calling_cnt', 'grow__call_use', 'grow__gprs_now_rest', 'grow__gprs_flow_music', 'grow__calling_diff_cnt', 'max__gprs_flow_roam', 'max__monthsremain_last_stop_date', 'max__gprs_last_defer', 'max__gprs_resource', 'max__calling_diff_dura', 'max__dinner_fee', 'max__nos_calling', 'max__nos_calling_diff', 'max__arpu', 'max__calling_cnt', 'max__gprs_flow_commu', 'max__call_use', 'max__gprs_now_rest', 'max__gprs_flow_music', 'max__calling_diff_cnt', 'max__call_dura_roam', 'max__calling_dura', 'min__gprs_flow_roam', 'min__gprs_last_defer', 'min__gprs_resource', 'min__calling_diff_dura', 'min__gprs_flow_video', 'min__gprs_flow_5g', 'min__nos_calling', 'min__nos_calling_diff', 'min__arpu', 'min__calling_cnt', 'min__gprs_flow_commu', 'min__gprs_now_defer', 'min__call_use', 'min__gprs_flow_4g', 'min__gprs_now_rest', 'min__gprs_flow_music', 'min__calling_diff_cnt', 'min__gprs_flow_game', 'min__call_dura_roam', 'min__gprs_flow_short', 'min__calling_dura', 'std__gprs_last_defer', 'std__gprs_resource', 'std__calling_diff_dura', 'std__gprs_flow_video', 'std__nos_calling', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_commu', 'std__call_use', 'std__gprs_flow_4g', 'std__gprs_now_rest', 'std__calling_diff_cnt', 'std__call_dura_roam', 'std__calling_dura', 'more0cnt__monthsremain_last_stop_date', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__nos_calling', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__arpu', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__call_use', 'moreq25cnt__gprs_flow_4g', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_flow_game', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'valuecnt__if_nolimit~是', 'valuecnt__if_5g_dinner~是']
                    20220627-16:22:44      timedata_predict 计算稳定度（不区分正负例）：self.col_psi_all_
                    20220627-16:22:55      data out: (3310, 157)
                    20220627-16:22:55      transform轨迹：PsiTransformer_DF(Ncase='0', Pcase='1', bins=None, col_ignore=None, fit_pop_all=False, precision=6, , psi_limit=0.1, trans_na_error=True, warn_mark=' PsiTransformer')
                    20220627-16:22:55      结束时间：2022-06-27 16:22:55 耗时(11s)
20220627-16:22:55  保存Psi至：./binaryclassify/eg//predictscore~202012/predict_Psi~202010~202012~0.pkl
20220627-16:22:55  保存dis_exam至：./binaryclassify/eg//predictscore~202012/predict_dis_exam~202012~0.pkl
20220627-16:22:55  结束时间：2022-06-27 16:22:55
20220627-16:22:55  耗时：20 s


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning: stage取值为create时,r_limit, iv_limit参数无效，将被忽略
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例) ['account_id']字段多出2322个取值, .head(5):
                      old  new
field      value              
account_id 101572366  NaN  1.0
           101798527  NaN  1.0
           101817036  NaN  1.0
           101875592  NaN  1.0
           101994315  NaN  1.0
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:      PsiTransformer timedata_predict 计算稳定性(不区分正负例)，38个字段稳定性>=psi_limit（0.1）：
grow__gprs_resource                      4.439453
grow__gprs_last_defer                    2.232931
grow__gprs_now_rest                      2.140172
max__monthsremain_last_stop_date         1.405633
avg__monthsremain_last_stop_date         0.790859
more0cnt__monthsremain_last_stop_date    0.512769
sep__gprs_resource                       0.445397
account_id                               0.431740
min__gprs_now_rest                       0.405154
wave__monthsremain_last_stop_date        0.386798
wave__gprs_flow_video                    0.383782
sep__gprs_now_rest                       0.363417
wave__gprs_now_rest                      0.307127
moreq25cnt__arpu                         0.289794
grow__gprs_flow_roam                     0.232755
min__gprs_now_defer                      0.222008
wave__gprs_flow_music                    0.208796
moreq25cnt__gprs_flow_4g                 0.202080
sep__gprs_flow_commu                     0.192000
moreq25cnt__calling_dura                 0.185917
wave__gprs_now_defer                     0.184252
wave__gprs_flow_commu                    0.170403
wave__gprs_flow_short                    0.167556
sep__nos_calling_diff                    0.167060
wave__calling_dura                       0.165424
wave__calling_cnt                        0.164051
more0cnt__nos_calling                    0.155792
min__arpu                                0.155312
moreq25cnt__calling_cnt                  0.149721
sep__gprs_flow_short                     0.145582
moreq25cnt__calling_diff_cnt             0.144663
moreq25cnt__gprs_flow_music              0.139598
min__calling_dura                        0.135355
moreq25cnt__call_use                     0.132729
min__calling_cnt                         0.123867
min__gprs_last_defer                     0.113372
moreq25cnt__gprs_last_defer              0.111238
moreq25cnt__nos_calling                  0.110344
dtype: float64
  convert=self.convert_dtype,


D:\Python for Windows\lib\site-packages\pandas\core\apply.py:1101: UserWarning:      PsiTransformer data_predict X未带有y_carrier属性，不计算稳定度（区分正负例）
  convert=self.convert_dtype,

                   ###################################################################### 预测打分过程
                    
20220627-16:22:55  开始时间：2022-06-27 16:22:55
20220627-16:22:55  模型名称：模型示例
20220627-16:22:55  预测账期：202012
20220627-16:22:55  提取模型结果: ratio_1_2 | pipeline1 | RandomForestClassifier_DF - 默认参数
20220627-16:22:55  模型 [宽带探索]~训练~测试 账期：~202010~202012
20220627-16:22:55  最优模型的流水线是pipeline1
20220627-16:22:55  建模时效果评估数据集：data_timeout

20220627-16:22:55  ------------------------- 读取数据: ./binaryclassify/eg//predictscore~202012/predict_data~202012~0.csv 2022-06-27 16:22:55 -------------------------
20220627-16:22:55      src: file
20220627-16:22:55      condition: None
20220627-16:22:55      col_need(151): ['acct_month', 'user_id', 'sms_cnt', 'call_fee_local', 'account_id', 'innet_months', 'monthsremain_last_stop_date', 'gprs_last_defer', 'gprs_now_rest', 'call_use', 'arpu', 'calling_cnt', 'calling_dura', 'calling_diff_dura', 'gprs_flow_4g', 'gprs_flow_5g', 'gprs_flow_roam', 'call_dura_roam', 'nos_calling', 'nos_calling_diff', 'gprs_flow_video', 'gprs_flow_short', 'gprs_flow_commu', 'gprs_flow_game', 'greatest_gprs_app', 'sex_add~女', 'sex_add~男', 'avg__gprs_flow_roam', 'avg__monthsremain_last_stop_date', 'avg__gprs_last_defer', 'avg__gprs_resource', 'avg__calling_diff_dura', 'avg__gprs_flow_video', 'avg__gprs_flow_5g', 'avg__nos_calling', 'avg__nos_calling_diff', 'avg__arpu', 'avg__calling_cnt', 'avg__gprs_flow_commu', 'avg__gprs_now_defer', 'avg__call_use', 'avg__gprs_flow_4g', 'avg__gprs_now_rest', 'avg__gprs_flow_music', 'avg__calling_diff_cnt', 'avg__gprs_flow_game', 'avg__call_dura_roam', 'avg__gprs_flow_short', 'avg__calling_dura', 'sep__gprs_resource', 'sep__calling_diff_dura', 'sep__gprs_flow_5g', 'sep__nos_calling', 'sep__nos_calling_diff', 'sep__gprs_flow_commu', 'sep__gprs_now_rest', 'sep__calling_diff_cnt', 'sep__gprs_flow_short', 'sep__calling_dura', 'wave__monthsremain_last_stop_date', 'wave__gprs_last_defer', 'wave__gprs_flow_video', 'wave__calling_cnt', 'wave__gprs_flow_commu', 'wave__gprs_now_defer', 'wave__call_use', 'wave__gprs_now_rest', 'wave__gprs_flow_music', 'wave__calling_diff_cnt', 'wave__gprs_flow_short', 'wave__calling_dura', 'grow__gprs_flow_roam', 'grow__gprs_last_defer', 'grow__gprs_resource', 'grow__gprs_flow_video', 'grow__gprs_flow_5g', 'grow__calling_cnt', 'grow__gprs_now_rest', 'grow__gprs_flow_music', 'grow__calling_diff_cnt', 'max__gprs_flow_roam', 'max__monthsremain_last_stop_date', 'max__gprs_last_defer', 'max__gprs_resource', 'max__calling_diff_dura', 'max__dinner_fee', 'max__nos_calling', 'max__nos_calling_diff', 'max__arpu', 'max__calling_cnt', 'max__gprs_flow_commu', 'max__call_use', 'max__gprs_now_rest', 'max__gprs_flow_music', 'max__calling_diff_cnt', 'max__call_dura_roam', 'max__calling_dura', 'min__gprs_flow_roam', 'min__gprs_last_defer', 'min__gprs_resource', 'min__calling_diff_dura', 'min__gprs_flow_video', 'min__nos_calling', 'min__nos_calling_diff', 'min__arpu', 'min__calling_cnt', 'min__gprs_flow_commu', 'min__gprs_now_defer', 'min__call_use', 'min__gprs_flow_4g', 'min__gprs_now_rest', 'min__gprs_flow_music', 'min__calling_diff_cnt', 'min__call_dura_roam', 'min__gprs_flow_short', 'min__calling_dura', 'std__gprs_last_defer', 'std__gprs_resource', 'std__calling_diff_dura', 'std__gprs_flow_video', 'std__nos_calling', 'std__nos_calling_diff', 'std__calling_cnt', 'std__gprs_flow_commu', 'std__call_use', 'std__gprs_flow_4g', 'std__gprs_now_rest', 'std__calling_diff_cnt', 'std__call_dura_roam', 'std__calling_dura', 'more0cnt__monthsremain_last_stop_date', 'more0cnt__nos_calling', 'more0cnt__calling_dura', 'moreq25cnt__gprs_last_defer', 'moreq25cnt__gprs_resource', 'moreq25cnt__gprs_flow_video', 'moreq25cnt__gprs_flow_5g', 'moreq25cnt__nos_calling', 'moreq25cnt__nos_calling_diff', 'moreq25cnt__arpu', 'moreq25cnt__calling_cnt', 'moreq25cnt__gprs_flow_commu', 'moreq25cnt__call_use', 'moreq25cnt__gprs_flow_4g', 'moreq25cnt__gprs_flow_music', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_flow_game', 'moreq25cnt__gprs_flow_short', 'moreq25cnt__calling_dura', 'valuecnt__if_nolimit~是', 'valuecnt__if_5g_dinner~是']
20220627-16:22:55      col_del: None
20220627-16:22:55      col_char: None
20220627-16:22:55      col_num: None
20220627-16:22:55      col_date: None
20220627-16:22:55      nrows: None
20220627-16:22:55      if_coltolower: False
20220627-16:22:55      kwargs: {}

20220627-16:22:55      读取
20220627-16:22:55  -------------------------读取完毕: (3310, 151) 2022-06-27 16:22:55 -------------------------

20220627-16:22:55  补齐流水线删除的11个fit_in_colnames_字段
20220627-16:22:55      数据量：(3310, 162)

20220627-16:22:55  数据账期校验:
20220627-16:22:55      通过

20220627-16:22:55  top原因匹配
20220627-16:22:55      最优模型 - pipeline1 - 数据转换
20220627-16:22:55      col_notcause：['acct_month', 'phone_no_null', 'user_id', 'account_id', 'last_stop_date']
20220627-16:22:56      从流水线中获取WoeTransformer_DF
20220627-16:22:56      向WoeTransformer_DF.psi_.col_ignore补充流水线中删除的字段，不做稳定度检验（未读取，用np.nan填充）

20220627-16:22:56      数据分箱（union1） 2022-06-27 16:22:56
20220627-16:22:58      转换前shape：(3310, 162)
20220627-16:22:58      转换后shape：(3310, 152)

20220627-16:22:58      woe转换 2022-06-27 16:22:58
20220627-16:23:06      转换前shape：(3310, 152)
20220627-16:23:06      转换后shape：(3310, 145)

20220627-16:23:06      确定动因字段 2022-06-27 16:23:06
20220627-16:23:06      剔除非动因字段（0个）：set()
20220627-16:23:06      动因字段：145个

20220627-16:23:06      计算动因字段的相关矩阵，删除高相关字段
20220627-16:23:06      输入为相关性系数矩阵
20220627-16:23:06      提取相关性超过0.8的字段
20220627-16:23:06      需要删除68个高度相关字段: ['sep__gprs_flow_short', 'max__gprs_flow_music', 'std__gprs_flow_commu', 'moreq25cnt__gprs_flow_music', 'min__gprs_now_defer', 'wave__gprs_last_defer', 'avg__gprs_resource', 'moreq25cnt__gprs_flow_commu', 'max__gprs_flow_roam', 'std__gprs_flow_video', 'avg__gprs_flow_commu', 'max__calling_diff_cnt', 'moreq25cnt__calling_dura', 'min__calling_dura', 'moreq25cnt__calling_diff_cnt', 'moreq25cnt__gprs_flow_short', 'arpu', 'gprs_last_defer', 'wave__gprs_flow_commu', 'avg__gprs_flow_music', 'more0cnt__calling_dura', 'avg__arpu', 'avg__gprs_flow_game', 'min__call_use', 'avg__calling_cnt', 'sex_add~女', 'grow__gprs_flow_5g', 'calling_diff_dura', 'avg__gprs_flow_short', 'wave__gprs_flow_video', 'gprs_flow_4g', 'avg__monthsremain_last_stop_date', 'moreq25cnt__calling_cnt', 'more0cnt__monthsremain_last_stop_date', 'avg__calling_diff_dura', 'gprs_now_rest', 'avg__call_use', 'moreq25cnt__gprs_flow_video', 'avg__gprs_now_rest', 'max__gprs_resource', 'avg__gprs_last_defer', 'std__gprs_flow_4g', 'min__nos_calling_diff', 'max__nos_calling_diff', 'sep__gprs_now_rest', 'min__calling_diff_cnt', 'min__gprs_flow_short', 'gprs_flow_short', 'moreq25cnt__nos_calling', 'grow__gprs_flow_video', 'nos_calling', 'avg__nos_calling_diff', 'min__calling_diff_dura', 'gprs_flow_game', 'min__gprs_flow_commu', 'grow__gprs_flow_music', 'nos_calling_diff', 'min__calling_cnt', 'calling_dura', 'gprs_flow_roam', 'wave__gprs_flow_short', 'wave__gprs_now_rest', 'moreq25cnt__nos_calling_diff', 'gprs_flow_video', 'std__call_dura_roam', 'min__gprs_flow_4g', 'gprs_flow_commu', 'avg__gprs_flow_video']
20220627-16:23:06      动因字段：77个

20220627-16:23:06      从原因中删除用户量过小的 字段-取值
20220627-16:23:06      阈值 valuecount_limit= 50
20220627-16:23:07      将7个字段的7个取值（用户量<=50）从原因中剔除（对应的woe置为-999）

20220627-16:23:07      原因排序 2022-06-27 16:23:07
20220627-16:23:07      top1 2022-06-27 16:23:07
20220627-16:23:07      top2 2022-06-27 16:23:07
20220627-16:23:07      top3 2022-06-27 16:23:07
20220627-16:23:07      排序结束 2022-06-27 16:23:07

20220627-16:23:07      将woe<=woe_thred（0)的原因置空
20220627-16:23:07      top1: colwoe_top1字段最小值0.288 > woe_thred（0）,无需处理
20220627-16:23:07      top2: colwoe_top2字段最小值0.115 > woe_thred（0）,无需处理
20220627-16:23:07      top3: 将6行woe<=woe_thred（0)的colname_top3, colcomment_top3, colvalue_top3, colwoe_top3置空


20220627-16:23:07  模型预测

20220627-16:23:07  匹配各分数档位查准率、提升度（非累计）



Traceback (most recent call last):
  File "<ipython-input-34-eb390a8ef4e7>", line 58, in <module>
    pred_res[model_name] = predict_fun(train_result, Info_i, n_reason)
  File "D:\工作\模型脚本\ModelProject\selfmodule\binarymodule\predictscore.py", line 366, in predict_fun
    raise Exception(s)
Exception: 存在缺失值：{'precision': 559, 'lift': 559}
